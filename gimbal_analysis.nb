(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    331090,       6677]
NotebookOptionsPosition[    328761,       6604]
NotebookOutlinePosition[    329103,       6619]
CellTagsIndexPosition[    329060,       6616]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"global", " ", "system"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Note", " ", "ex"}], ",", "ey", ",", 
    RowBox[{
    "ez", " ", "may", " ", "vary", " ", "depending", " ", "on", " ", "the", 
     " ", 
     RowBox[{"person", "'"}], "s", " ", "orientation"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "but", " ", "are", " ", "currently", " ", "assumed", " ", "to", " ", "be",
      " ", "aligned", " ", "with", " ", "gravitational", " ", "vectors", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{"i", ".", "e", ".", " ", "flat"}], ")"}], "\[IndentingNewLine]",
      "v0", " ", 
     RowBox[{"(", "\[IndentingNewLine]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MyTeXForm", "[", "a_", "]"}], ":=", 
    RowBox[{"StringReplace", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"TeXForm", "[", "a", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Shortest", "[", 
          RowBox[{"\"\<\\\\text{\>\"", "~~", "s___", "~~", "\"\<}\>\""}], 
          "]"}], "\[Rule]", "s"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<$\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ex", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ey", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ez", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"System", " ", "Parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]", " ", "=", " ", "1000"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"kg", "/", 
     SuperscriptBox["m", "3"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fv", " ", "[", 
     RowBox[{"h_", ",", "R_", ",", "r_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Pi]", " ", "h"}], "3"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["R", "2"], "+", 
       RowBox[{"R", " ", "r"}], " ", "+", " ", 
       SuperscriptBox["r", "2"]}], ")"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"frustum", " ", "volume"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"m", "\[Rule]", 
     RowBox[{"\[Rho]", " ", 
      RowBox[{"fv", "[", 
       RowBox[{
        RowBox[{"4.33", " ", 
         FractionBox["2.54", "100"]}], ",", " ", 
        RowBox[{"3.5", " ", 
         FractionBox["2.54", "100"]}], ",", " ", 
        RowBox[{"2.32", " ", 
         FractionBox["2.54", "100"]}]}], "]"}]}]}], " ", "*)"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"derived", " ", "mass"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"parameter", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"lengths", " ", "are", " ", "currently", " ", "arbitrary"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m", "\[Rule]", " ", "0.4"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"dunkin", " ", "donuts", " ", "medium", " ", "size"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"lx", "\[Rule]", "0.2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ly", "\[Rule]", "0.1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"lz", "\[Rule]", "0.08"}], ",", "\[IndentingNewLine]", 
       RowBox[{"g", " ", "\[Rule]", " ", "9.81"}]}], "\[IndentingNewLine]", 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"person", " ", 
     RowBox[{"position", " ", "/", " ", "velocity"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p0", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"position", " ", "/", " ", "velocity"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pa", " ", "=", " ", 
     RowBox[{"p0", " ", "+", " ", 
      RowBox[{"lx", " ", "ex"}], " ", "+", " ", 
      RowBox[{"ly", " ", 
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", "ey"}], " ", "+", " ", 
      RowBox[{"ly", " ", 
       RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", "ez"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pb", " ", "=", " ", 
     RowBox[{"pa", " ", "-", " ", 
      RowBox[{"ly", " ", 
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", "ey"}], "+", " ", 
      RowBox[{"lz", " ", 
       RowBox[{"Sin", "[", "\[Theta]y", "]"}], " ", "ex"}], " ", "-", " ", 
      RowBox[{"lz", " ", 
       RowBox[{"Cos", "[", "\[Theta]y", "]"}], "ez"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"va", " ", "=", " ", 
     RowBox[{"v0", " ", "+", " ", 
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"\[Omega]x", " ", "ex"}], ",", " ", 
        RowBox[{"pa", "-", "p0"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vb", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{"va", " ", "+", " ", 
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"\[Omega]y", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Theta]x", "]"}]}], "ey"}], " ", "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]x", "]"}], "ez"}]}], ")"}]}], ",", 
         " ", 
         RowBox[{"pb", "-", "pa"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<vb-va\>\"", "]"}], "\[IndentingNewLine]", 
     RowBox[{"MyTeXForm", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vb", "-", "va"}], ")"}], "/", "\[Omega]y"}], "]"}], "}"}],
        "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", " ", "=", " ", "pb"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", " ", "=", " ", "vb"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", " ", "=", " ", 
      RowBox[{"p0", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"lx", " ", "+", " ", 
          RowBox[{"lz", " ", 
           RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ")"}], "ex"}], " ", 
       "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ly", " ", 
           RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], " ", "-", " ", 
          RowBox[{"lz", " ", 
           RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], ")"}], " ", "ez"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"v", "=", " ", 
      RowBox[{"v0", " ", "+", " ", 
       RowBox[{"\[Omega]x", " ", "ly", " ", 
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], "ez"}], " ", "-", " ", 
       RowBox[{"\[Omega]x", " ", "ly", " ", 
        RowBox[{"Sin", "[", "\[Theta]x", "]"}], "ey"}], " ", "+", " ", 
       RowBox[{"\[Omega]y", " ", "lz", " ", 
        RowBox[{"Sin", "[", "\[Theta]y", "]"}], "ez"}], " ", "+", " ", 
       RowBox[{"\[Omega]y", " ", "lz", " ", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}], "ex"}]}]}], ";"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "energy", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", " ", ":", " ", 
     RowBox[{"include", " ", "KE", " ", "of", " ", "armature", " ", 
      RowBox[{"(", "device", ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"h", " ", "=", " ", 
    RowBox[{"Dot", "[", 
     RowBox[{"p", ",", " ", "ez"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"KE", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      FractionBox["1", "2"], "m", "  ", 
      RowBox[{"Dot", "[", 
       RowBox[{"v", ",", "v"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"PE", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"m", " ", "g", " ", "h"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.72174694266278*^9, 3.721747023479861*^9}, {
   3.7217481658723154`*^9, 3.7217482990623155`*^9}, {3.7217483300623155`*^9, 
   3.721748341173315*^9}, {3.7217483953053155`*^9, 3.7217486674303155`*^9}, {
   3.7217488266253157`*^9, 3.7217488530873156`*^9}, {3.7217489115633154`*^9, 
   3.7217489314013157`*^9}, {3.7217489640853157`*^9, 
   3.7217490152403154`*^9}, {3.7217493330243154`*^9, 
   3.7217493977103157`*^9}, {3.7217494458203154`*^9, 
   3.7217494769563155`*^9}, {3.7217496630053153`*^9, 
   3.7217496706623154`*^9}, {3.721749791652315*^9, 3.7217500795293155`*^9}, {
   3.721750447803315*^9, 3.7217504548643155`*^9}, {3.7217505431393156`*^9, 
   3.7217505650033154`*^9}, {3.7217506613973155`*^9, 3.7217506647353153`*^9}, 
   3.7217507163313155`*^9, {3.7217603177235904`*^9, 3.7217604217339907`*^9}, {
   3.721760455266343*^9, 3.7217604563644533`*^9}, {3.7217622031331315`*^9, 
   3.7217622049033084`*^9}, {3.7217622379726152`*^9, 3.721762312207038*^9}, {
   3.7217623797367897`*^9, 3.721762520290844*^9}, 3.721762569245739*^9, {
   3.721762678145628*^9, 3.7217627485446672`*^9}, {3.721785601983615*^9, 
   3.721785603002615*^9}, {3.721785950245615*^9, 3.721785973759615*^9}, {
   3.7217860337466145`*^9, 3.721786039021615*^9}, {3.7217861882036147`*^9, 
   3.721786195533615*^9}, {3.7217894516170025`*^9, 3.721789452158002*^9}, {
   3.7217939945209303`*^9, 3.7217940289813757`*^9}, {3.721794071566634*^9, 
   3.721794097877265*^9}, {3.721794227789255*^9, 3.72179428774825*^9}, {
   3.7217943225817327`*^9, 3.721794356136088*^9}, {3.7217945806625385`*^9, 
   3.7217945978332553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "lz"}], " ", 
   RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "+", 
  RowBox[{"ly", " ", 
   RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7217942440778837`*^9, 3.7217942882452993`*^9}, {
   3.7217943362561007`*^9, 3.7217943568211565`*^9}, 3.7217945980832806`*^9, 
   3.7217950709525623`*^9, 3.7218610252018776`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "m", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Omega]y", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "-", 
        RowBox[{"ly", " ", 
         RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ly", " ", "\[Omega]x"}], "+", 
        RowBox[{"lz", " ", "\[Omega]y", " ", 
         RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ly", " ", "\[Omega]x"}], "+", 
        RowBox[{"lz", " ", "\[Omega]y", " ", 
         RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ")"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7217942440778837`*^9, 3.7217942882452993`*^9}, {
   3.7217943362561007`*^9, 3.7217943568211565`*^9}, 3.7217945980832806`*^9, 
   3.7217950709525623`*^9, 3.7218610253628297`*^9}],

Cell[BoxData[
 RowBox[{"g", " ", "m", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "lz"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "+", 
    RowBox[{"ly", " ", 
     RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7217942440778837`*^9, 3.7217942882452993`*^9}, {
   3.7217943362561007`*^9, 3.7217943568211565`*^9}, 3.7217945980832806`*^9, 
   3.7217950709525623`*^9, 3.721861025370827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Lagrangian", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"L", " ", "=", " ", 
    RowBox[{"KE", "-", "PE"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", " ", "=", " ", 
     RowBox[{"L", " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]x", " ", "\[Rule]", " ", 
         RowBox[{"\[Theta]x", "[", "t", "]"}]}], ",", " ", 
        RowBox[{"\[Theta]y", " ", "\[Rule]", " ", 
         RowBox[{"\[Theta]y", "[", "t", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", " ", "=", " ", 
     RowBox[{"L", " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Omega]x", " ", "\[Rule]", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Theta]x", "[", "t", "]"}], ",", "t"}], "]"}]}], ",", 
        " ", 
        RowBox[{"\[Omega]y", " ", "\[Rule]", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Theta]y", "[", "t", "]"}], ",", " ", "t"}], "]"}]}]}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Qx", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Theta]x", "[", "t", "]"}], ",", "t"}], "]"}]], "L"}], 
       ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]x", "[", "t", "]"}]], "L"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Qy", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Theta]y", "[", "t", "]"}], ",", " ", "t"}], "]"}]], 
        "L"}], ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"\[Theta]y", "[", "t", "]"}]], "L"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Qx", "-", 
           RowBox[{"\[Tau]x", "[", "t", "]"}]}], " ", "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"Qy", " ", "-", " ", 
           RowBox[{"\[Tau]y", "[", "t", "]"}]}], " ", "\[Equal]", "0"}]}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]x", "''"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Theta]y", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"\[Delta]x", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]x", "''"}], "[", "t", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]y", "''"}], "[", "t", "]"}]}], "}"}], "/.", 
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"angular", " ", 
     RowBox[{"acc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.72174694266278*^9, 3.721747023479861*^9}, {
   3.7217481658723154`*^9, 3.7217482990623155`*^9}, {3.7217483300623155`*^9, 
   3.721748341173315*^9}, {3.7217483953053155`*^9, 3.7217486674303155`*^9}, {
   3.7217488266253157`*^9, 3.7217488530873156`*^9}, {3.7217489115633154`*^9, 
   3.7217489314013157`*^9}, {3.7217489640853157`*^9, 
   3.7217490152403154`*^9}, {3.7217493330243154`*^9, 
   3.7217493977103157`*^9}, {3.7217494458203154`*^9, 
   3.7217494769563155`*^9}, {3.7217496630053153`*^9, 
   3.7217496706623154`*^9}, {3.721749791652315*^9, 3.7217500795293155`*^9}, {
   3.721750447803315*^9, 3.7217504548643155`*^9}, {3.7217505431393156`*^9, 
   3.7217505650033154`*^9}, {3.7217506613973155`*^9, 3.7217506647353153`*^9}, 
   3.7217507163313155`*^9, {3.7217509593673153`*^9, 3.7217509806723156`*^9}, {
   3.7217510225103154`*^9, 3.7217511032023153`*^9}, {3.7217511470593157`*^9, 
   3.7217512017813153`*^9}, {3.7217516846753154`*^9, 
   3.7217517326203156`*^9}, {3.7217518395003157`*^9, 
   3.7217520469583154`*^9}, {3.7217520836303153`*^9, 
   3.7217524493163157`*^9}, {3.7217532048353157`*^9, 
   3.7217532481103153`*^9}, {3.7217533110523157`*^9, 
   3.7217533717013154`*^9}, {3.7217534101613154`*^9, 3.721753491402315*^9}, {
   3.721753556652315*^9, 3.7217537789323153`*^9}, {3.7217538092533154`*^9, 
   3.7217538495523157`*^9}, {3.7217539200963154`*^9, 3.721754138755483*^9}, {
   3.7217542006971807`*^9, 3.7217542046847663`*^9}, {3.7217548539671955`*^9, 
   3.7217549421518283`*^9}, {3.7217550455804005`*^9, 
   3.7217550654613886`*^9}, {3.7217555138722253`*^9, 3.721755539009739*^9}, {
   3.7217572885246725`*^9, 3.7217572902318435`*^9}, {3.7217595874585714`*^9, 
   3.721759596093435*^9}, {3.721787590417107*^9, 3.721787595293595*^9}, {
   3.7217878474488077`*^9, 3.7217879433723993`*^9}, {3.7217880845675173`*^9, 
   3.7217880862926893`*^9}, {3.721789446305002*^9, 3.7217894489090023`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "g"}], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "lz"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "+", 
     RowBox[{"ly", " ", 
      RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Omega]y", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ly", " ", "\[Omega]x"}], "+", 
         RowBox[{"lz", " ", "\[Omega]y", " ", 
          RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ly", " ", "\[Omega]x"}], "+", 
         RowBox[{"lz", " ", "\[Omega]y", " ", 
          RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ")"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.721755518670705*^9, 3.7217555392977676`*^9}, {
   3.721757187120533*^9, 3.721757203143135*^9}, {3.7217572483816586`*^9, 
   3.721757290649885*^9}, {3.72175957994482*^9, 3.721759590780904*^9}, 
   3.7217604595197687`*^9, 3.7217627553003426`*^9, 3.721762794810293*^9, 
   3.7217875958336487`*^9, {3.7217878500250654`*^9, 3.721787899105973*^9}, 
   3.721787945258588*^9, 3.721788086501711*^9, 3.7217893621730022`*^9, 
   3.721789522964002*^9, 3.7217950712125883`*^9, 3.7218610255467744`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "ly", " ", "m", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "ly", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"ly", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "ly", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "ly", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.721755518670705*^9, 3.7217555392977676`*^9}, {
   3.721757187120533*^9, 3.721757203143135*^9}, {3.7217572483816586`*^9, 
   3.721757290649885*^9}, {3.72175957994482*^9, 3.721759590780904*^9}, 
   3.7217604595197687`*^9, 3.7217627553003426`*^9, 3.721762794810293*^9, 
   3.7217875958336487`*^9, {3.7217878500250654`*^9, 3.721787899105973*^9}, 
   3.721787945258588*^9, 3.721788086501711*^9, 3.7217893621730022`*^9, 
   3.721789522964002*^9, 3.7217950712125883`*^9, 3.7218610256367474`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "lz", " ", "m", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "lz", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"ly", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", "lz", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "lz", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"ly", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "ly"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "lz", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "lz", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", "lz", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "lz", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lz", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"ly", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]x", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"lz", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]y", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.721755518670705*^9, 3.7217555392977676`*^9}, {
   3.721757187120533*^9, 3.721757203143135*^9}, {3.7217572483816586`*^9, 
   3.721757290649885*^9}, {3.72175957994482*^9, 3.721759590780904*^9}, 
   3.7217604595197687`*^9, 3.7217627553003426`*^9, 3.721762794810293*^9, 
   3.7217875958336487`*^9, {3.7217878500250654`*^9, 3.721787899105973*^9}, 
   3.721787945258588*^9, 3.721788086501711*^9, 3.7217893621730022`*^9, 
   3.721789522964002*^9, 3.7217950712125883`*^9, 3.7218610256537423`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sec", "[", 
          RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", 
            SuperscriptBox["lz", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sec", "[", 
             RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ly", "2"], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["lz", "2"]}], "-", 
              RowBox[{
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"4", " ", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
            " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "3"]}], "-", 
           RowBox[{"16", " ", "ly", " ", "lz", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Tan", "[", 
             RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Tau]x", "[", "t", "]"}]}], "-", 
        RowBox[{"8", " ", "ly", " ", "lz", " ", 
         SuperscriptBox[
          RowBox[{"Sec", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "4"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"\[Tau]y", "[", "t", "]"}]}], "-", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "g", " ", "ly", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["lz", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  SuperscriptBox["ly", "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"]}], "+", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"3", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"4", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sec", "[", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Theta]x", "[", "t", "]"}], "2"], "]"}], "2"]}], 
              "-", 
              RowBox[{"8", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"4", " ", "ly", " ", "lz", " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "3"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]x", "[", "t", "]"}]}], "-", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}], "-", 
              RowBox[{"2", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]x", "[", "t", "]"}]}], "+", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}]}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}]}]}], "]"}]}]}], ")"}], 
            " ", 
            RowBox[{
             SuperscriptBox["\[Theta]x", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]y", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sec", "[", 
             RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "8"}], " ", 
               SuperscriptBox["lz", "4"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "4"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
              RowBox[{"8", " ", "ly", " ", 
               SuperscriptBox["lz", "3"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"\[Theta]x", "[", "t", "]"}], "2"], "]"}], "2"], 
               " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"7", "-", 
                    RowBox[{"10", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{"5", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"3", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Sec", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"]}]}], 
                ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["lz", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  SuperscriptBox["ly", "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"]}], "+", 
                 RowBox[{"16", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"4", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
               " ", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["ly", "3"], " ", "lz", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", 
                 RowBox[{"5", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                 RowBox[{"7", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"3", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
               " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "3"]}], "+", 
                 RowBox[{
                  SuperscriptBox["lz", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sec", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}]}]}],
              ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Theta]y", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}],
        ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"8", " ", 
      SuperscriptBox["ly", "2"], " ", "m", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], "2"]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "lz"}], " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", 
         RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"\[Tau]x", "[", "t", "]"}]}], "+", 
      RowBox[{"ly", " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", 
         RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
       RowBox[{"\[Tau]y", "[", "t", "]"}]}], "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ly", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "ly", " ", "lz", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             SuperscriptBox["ly", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"lz", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
                RowBox[{"ly", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], 
              "2"], " ", 
             RowBox[{"Tan", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"lz", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "g"}], " ", "ly", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], ")"}], " ", 
             RowBox[{"Sec", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ly", " ", "lz", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  FractionBox[
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "2"], "]"}], "2"], 
                " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["lz", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
                RowBox[{"Tan", "[", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
               RowBox[{"ly", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "lz"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}], " ", 
                   RowBox[{"Tan", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
                  RowBox[{"ly", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]y", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
           ")"}]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"ly", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], "2"]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.721755518670705*^9, 3.7217555392977676`*^9}, {
   3.721757187120533*^9, 3.721757203143135*^9}, {3.7217572483816586`*^9, 
   3.721757290649885*^9}, {3.72175957994482*^9, 3.721759590780904*^9}, 
   3.7217604595197687`*^9, 3.7217627553003426`*^9, 3.721762794810293*^9, 
   3.7217875958336487`*^9, {3.7217878500250654`*^9, 3.721787899105973*^9}, 
   3.721787945258588*^9, 3.721788086501711*^9, 3.7217893621730022`*^9, 
   3.721789522964002*^9, 3.7217950712125883`*^9, 3.721861151873865*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"state", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ax", "[", "t", "]"}], ",", " ", 
       RowBox[{"Ay", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]x", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]y", "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]x", "'"}], "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]y", "'"}], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"delta", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]x", "[", "t", "]"}], "-", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Theta]y", "[", "t", "]"}], "-", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Theta]x", "'"}], "[", "t", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Theta]y", "'"}], "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Delta]x", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"\[Delta]x", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"against", " ", "unit", " ", "step"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]x", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]y", "[", "t", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]x", "'"}], "[", "t", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]y", "'"}], "[", "t", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"delta", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]x", "'"}], "[", "t", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]y", "'"}], "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Delta]x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"\[Delta]x", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"input", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Tau]x", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Tau]y", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"output", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]x", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]y", "[", "t", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sys", " ", "=", " ", 
     RowBox[{"NonlinearStateSpaceModel", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"delta", ",", "output"}], "}"}], ",", " ", "state", ",", " ", 
       "input"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"nsys", " ", "=", " ", 
    RowBox[{
     RowBox[{"sys", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Ax", "[", "t", "]"}], " ", "\[Rule]", " ", "Ax"}], ",", " ", 
        RowBox[{
         RowBox[{"Ay", "[", "t", "]"}], " ", "\[Rule]", " ", "Ay"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]x", "'"}], "[", "t", "]"}], "\[Rule]", " ", 
         "\[Omega]x"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]y", "'"}], "[", "t", "]"}], "\[Rule]", 
         "\[Omega]y"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Theta]x", "[", "t", "]"}], "\[Rule]", "\[Theta]x"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"\[Theta]y", "[", "t", "]"}], "\[Rule]", "\[Theta]y"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"\[Tau]x", "[", "t", "]"}], "\[Rule]", "\[Tau]x"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Tau]y", "[", "t", "]"}], "\[Rule]", "\[Tau]y"}]}], 
       "}"}]}], "/.", "params"}]}]}]}]], "Input",
 CellChangeTimes->{{3.72174694266278*^9, 3.721747023479861*^9}, {
   3.7217481658723154`*^9, 3.7217482990623155`*^9}, {3.7217483300623155`*^9, 
   3.721748341173315*^9}, {3.7217483953053155`*^9, 3.7217486674303155`*^9}, {
   3.7217488266253157`*^9, 3.7217488530873156`*^9}, {3.7217489115633154`*^9, 
   3.7217489314013157`*^9}, {3.7217489640853157`*^9, 
   3.7217490152403154`*^9}, {3.7217493330243154`*^9, 
   3.7217493977103157`*^9}, {3.7217494458203154`*^9, 
   3.7217494769563155`*^9}, {3.7217496630053153`*^9, 
   3.7217496706623154`*^9}, {3.721749791652315*^9, 3.7217500795293155`*^9}, {
   3.721750447803315*^9, 3.7217504548643155`*^9}, {3.7217505431393156`*^9, 
   3.7217505650033154`*^9}, {3.7217506613973155`*^9, 3.7217506647353153`*^9}, 
   3.7217507163313155`*^9, {3.7217509593673153`*^9, 3.7217509806723156`*^9}, {
   3.7217510225103154`*^9, 3.7217511032023153`*^9}, {3.7217511470593157`*^9, 
   3.7217512017813153`*^9}, {3.7217516846753154`*^9, 
   3.7217517326203156`*^9}, {3.7217518395003157`*^9, 
   3.7217520469583154`*^9}, {3.7217520836303153`*^9, 
   3.7217524493163157`*^9}, {3.7217532048353157`*^9, 
   3.7217532481103153`*^9}, {3.7217533110523157`*^9, 
   3.7217533717013154`*^9}, {3.7217534101613154`*^9, 3.721753491402315*^9}, {
   3.721753556652315*^9, 3.7217537789323153`*^9}, {3.7217538092533154`*^9, 
   3.7217538495523157`*^9}, {3.7217539200963154`*^9, 3.721754138755483*^9}, {
   3.7217542006971807`*^9, 3.7217542046847663`*^9}, {3.7217548539671955`*^9, 
   3.7217549421518283`*^9}, {3.7217550455804005`*^9, 3.721755257575598*^9}, {
   3.7217553056594057`*^9, 3.72175532040288*^9}, {3.7217553732811675`*^9, 
   3.7217554618290215`*^9}, {3.721755556798517*^9, 3.7217556164124784`*^9}, {
   3.7217556518050175`*^9, 3.721755659462783*^9}, {3.7217556942612624`*^9, 
   3.7217557019500313`*^9}, {3.721755739614797*^9, 3.721755742016037*^9}, {
   3.721755810299865*^9, 3.721755928994733*^9}, 3.721755960704904*^9, {
   3.721756902394064*^9, 3.7217569056933937`*^9}, {3.721756940034827*^9, 
   3.7217570622190447`*^9}, {3.7217571314099627`*^9, 3.721757177474569*^9}, {
   3.7217572173585567`*^9, 3.7217572638522053`*^9}, {3.721757298060626*^9, 
   3.721757361657985*^9}, {3.7217574856403823`*^9, 3.7217575368875065`*^9}, {
   3.721758159930278*^9, 3.721758175183278*^9}, 3.721759646045429*^9, {
   3.721762799598772*^9, 3.7217628000368156`*^9}, {3.7217644656223574`*^9, 
   3.7217645343062253`*^9}, {3.7217645907198663`*^9, 
   3.7217645924300375`*^9}, {3.7217838568016148`*^9, 3.721783859602615*^9}, {
   3.7217894416380024`*^9, 3.7217894654990025`*^9}, {3.721789633950002*^9, 
   3.721789635722002*^9}, {3.7217917346019936`*^9, 3.721791759722994*^9}, {
   3.7217982590763636`*^9, 3.7217982795574117`*^9}, {3.7217986586753197`*^9, 
   3.721798670725525*^9}, {3.721798754915943*^9, 3.721798760718523*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"\[Theta]x", "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"\[Theta]y", "[", "t", "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]x", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]y", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sec", "[", 
          RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", 
            SuperscriptBox["lz", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sec", "[", 
             RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["ly", "2"], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["lz", "2"]}], "-", 
              RowBox[{
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"4", " ", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
            " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "3"]}], "-", 
           RowBox[{"16", " ", "ly", " ", "lz", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Tan", "[", 
             RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"\[Tau]x", "[", "t", "]"}]}], "-", 
        RowBox[{"8", " ", "ly", " ", "lz", " ", 
         SuperscriptBox[
          RowBox[{"Sec", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "4"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"\[Tau]y", "[", "t", "]"}]}], "-", 
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "g", " ", "ly", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["lz", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  SuperscriptBox["ly", "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"]}], "+", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"3", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"4", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Sec", "[", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Theta]x", "[", "t", "]"}], "2"], "]"}], "2"]}], 
              "-", 
              RowBox[{"8", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"4", " ", "ly", " ", "lz", " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "3"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]x", "[", "t", "]"}]}], "-", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}], "-", 
              RowBox[{"2", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "ly", " ", "lz", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]x", "[", "t", "]"}]}], "+", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}]}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["lz", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}]}]}], "]"}]}]}], ")"}], 
            " ", 
            RowBox[{
             SuperscriptBox["\[Theta]x", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]y", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sec", "[", 
             RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "8"}], " ", 
               SuperscriptBox["lz", "4"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "4"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
              RowBox[{"8", " ", "ly", " ", 
               SuperscriptBox["lz", "3"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"\[Theta]x", "[", "t", "]"}], "2"], "]"}], "2"], 
               " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"7", "-", 
                    RowBox[{"10", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{"5", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"3", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Sec", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"]}]}], 
                ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["lz", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  SuperscriptBox["ly", "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"]}], "+", 
                 RowBox[{"16", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"4", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["lz", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
               " ", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["ly", "3"], " ", "lz", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", 
                 RowBox[{"5", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
                 RowBox[{"7", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"3", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}]}], ")"}], 
               " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["ly", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["ly", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "3"]}], "+", 
                 RowBox[{
                  SuperscriptBox["lz", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sec", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}]}]}],
              ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Theta]y", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}],
        ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"8", " ", 
      SuperscriptBox["ly", "2"], " ", "m", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], "2"]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "lz"}], " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", 
         RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"\[Tau]x", "[", "t", "]"}]}], "+", 
      RowBox[{"ly", " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", 
         RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "2"], " ", 
       RowBox[{"\[Tau]y", "[", "t", "]"}]}], "+", 
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ly", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "ly", " ", "lz", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             SuperscriptBox["ly", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               RowBox[{"\[Theta]x", "[", "t", "]"}]}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"lz", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
                RowBox[{"ly", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], 
              "2"], " ", 
             RowBox[{"Tan", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"lz", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "g"}], " ", "ly", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Sec", "[", 
                RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], ")"}], " ", 
             RowBox[{"Sec", "[", 
              RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ly", " ", "lz", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  FractionBox[
                   RowBox[{"\[Theta]x", "[", "t", "]"}], "2"], "]"}], "2"], 
                " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["lz", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
                RowBox[{"Tan", "[", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "+", 
               RowBox[{"ly", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "lz"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}]}], "]"}], " ", 
                   RowBox[{"Tan", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}], "-", 
                  RowBox[{"ly", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}], " ", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]y", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
           ")"}]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"ly", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lz", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]y", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"ly", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]x", "[", "t", "]"}], "]"}]}]}], ")"}], "2"]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7217575378055983`*^9, 3.721758757521278*^9, {3.7217596254743724`*^9, 
   3.7217596463774624`*^9}, 3.7217604618670034`*^9, {3.7217627964044523`*^9, 
   3.7217628004428563`*^9}, 3.721764537203515*^9, 3.7217645977925735`*^9, 
   3.721783861325615*^9, 3.7217893659940023`*^9, 3.721789466043002*^9, 
   3.721789526471002*^9, 3.721789636707002*^9, {3.721791750446994*^9, 
   3.7217917603379936`*^9}, 3.7217952458559837`*^9, 3.721798283407797*^9, 
   3.7217985586223154`*^9, 3.721798671222574*^9, 3.7217987611825695`*^9, 
   3.721861151983832*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Theta]x", "[", "t", "]"}], ",", 
   RowBox[{"\[Theta]y", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7217575378055983`*^9, 3.721758757521278*^9, {3.7217596254743724`*^9, 
   3.7217596463774624`*^9}, 3.7217604618670034`*^9, {3.7217627964044523`*^9, 
   3.7217628004428563`*^9}, 3.721764537203515*^9, 3.7217645977925735`*^9, 
   3.721783861325615*^9, 3.7217893659940023`*^9, 3.721789466043002*^9, 
   3.721789526471002*^9, 3.721789636707002*^9, {3.721791750446994*^9, 
   3.7217917603379936`*^9}, 3.7217952458559837`*^9, 3.721798283407797*^9, 
   3.7217985586223154`*^9, 3.721798671222574*^9, 3.7217987611825695`*^9, 
   3.7218611519918294`*^9}],

Cell[BoxData[
 TemplateBox[{RowBox[{
     RowBox[{"-", "1"}], "+", "\[Theta]x"}],RowBox[{
     RowBox[{"-", "1"}], "+", "\[Theta]y"}],"\[Omega]x","\[Omega]y",
   FractionBox[
    RowBox[{"31.249999999999996`", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
      RowBox[{"(", 
        RowBox[{
          RowBox[{
            RowBox[{"-", "0.064`"}], " ", "\[Tau]y", " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", "\[Theta]x", "]"}], "4"], " ", 
            RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], "+", 
          RowBox[{"\[Tau]x", " ", 
            RowBox[{"Sec", "[", "\[Theta]x", "]"}], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"0.0512`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                  RowBox[{"Sec", "[", "\[Theta]x", "]"}]}], "+", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.03560000000000001`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.010000000000000002`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "\[Theta]x"}], "]"}]}], "-", 
                    RowBox[{"0.0256`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]y"}], "]"}]}]}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sec", "[", "\[Theta]x", "]"}], "3"]}], "-", 
                RowBox[{"0.128`", " ", 
                  RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
                  RowBox[{"Tan", "[", "\[Theta]x", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"0.4`", " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"0.032`", " ", "\[Omega]x", " ", "\[Omega]y", " ", 
                  SuperscriptBox[
                   RowBox[{"Sec", "[", "\[Theta]x", "]"}], "3"], " ", 
                  RowBox[{"Sin", "[", "\[Theta]y", "]"}], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.024000000000000004`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Theta]x"}], "-", "\[Theta]y"}], 
                    "]"}]}], "-", 
                    RowBox[{"0.016`", " ", 
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "+", 
                    RowBox[{"0.024000000000000004`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Theta]x"}], "+", "\[Theta]y"}], 
                    "]"}]}], "+", 
                    RowBox[{"0.0328`", " ", 
                    RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], "-", 
                    RowBox[{"0.020000000000000004`", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Theta]x"}], "]"}]}], "+", 
                    RowBox[{"0.0064`", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]x", "-", 
                    RowBox[{"2", " ", "\[Theta]y"}]}], "]"}]}], "+", 
                    RowBox[{"0.0064`", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Theta]x", "+", 
                    RowBox[{"2", " ", "\[Theta]y"}]}], "]"}]}]}], ")"}]}], 
                "+", 
                RowBox[{"1.9620000000000002`", " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.0256`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.004400000000000005`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.06000000000000001`", " ", 
                    RowBox[{"Cos", "[", "\[Theta]x", "]"}]}], "+", 
                    RowBox[{"0.04000000000000001`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]x"}], "]"}]}], "+", 
                    RowBox[{"0.020000000000000004`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Theta]x"}], "]"}]}], "+", 
                    RowBox[{"0.010000000000000002`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "\[Theta]x"}], "]"}]}], "+", 
                    RowBox[{"0.0256`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]y"}], "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Theta]x", "2"], "]"}], "2"]}], "-", 
                    RowBox[{"0.064`", " ", 
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}]}], ")"}]}], "-", 
                RowBox[{
                  SuperscriptBox["\[Omega]y", "2"], " ", 
                  RowBox[{"Sec", "[", "\[Theta]x", "]"}], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.00032768`"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], "4"], " ", 
                    RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], "-", 
                    RowBox[{"0.0004096000000000001`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Theta]x", "2"], "]"}], "2"], " ", 
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"7", "-", 
                    RowBox[{"10", " ", 
                    RowBox[{"Cos", "[", "\[Theta]x", "]"}]}], "+", 
                    RowBox[{"5", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]x"}], "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]y", "]"}], "2"]}]}], ")"}]}],
                     "+", 
                    RowBox[{"0.0064`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.004400000000000005`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.16000000000000003`", " ", 
                    RowBox[{"Cos", "[", "\[Theta]x", "]"}]}], "+", 
                    RowBox[{"0.12000000000000002`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]x"}], "]"}]}], "+", 
                    RowBox[{"0.09000000000000002`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "\[Theta]x"}], "]"}]}], "+", 
                    RowBox[{"0.0256`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]y"}], "]"}]}]}], ")"}], " ", 
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}], " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}], "-", 
                    RowBox[{"0.00016000000000000004`", " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    RowBox[{"5", " ", 
                    RowBox[{"Cos", "[", "\[Theta]x", "]"}]}], "+", 
                    RowBox[{"7", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Theta]x"}], "]"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}], "+", 
                    RowBox[{"0.08000000000000002`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.010000000000000002`", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]x"}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]x", "]"}], "3"]}], "+", 
                    RowBox[{"0.0064`", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]x"}], "]"}], " ", 
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]y", "]"}], "2"], " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
       RowBox[{
         RowBox[{"0.08`", " ", 
           RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "-", 
         RowBox[{"0.1`", " ", 
           RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ")"}], "2"]],
   FractionBox[
    RowBox[{"25.`", " ", 
      RowBox[{"(", 
        RowBox[{
          RowBox[{"0.1`", " ", "\[Tau]y", " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", "\[Theta]x", "]"}], "2"]}], "-", 
          RowBox[{"0.08`", " ", "\[Tau]x", " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", "\[Theta]x", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], "+", 
          RowBox[{"0.4`", " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"0.1`", " ", "\[Omega]x", " ", "\[Omega]y", " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.016`", " ", 
                    RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "-", 
                    RowBox[{"0.010000000000000002`", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Theta]x"}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.08`", " ", 
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "-", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ")"}], "2"], 
                    " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}]}], ")"}]}], "+", 
                RowBox[{"0.08`", " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.9810000000000001`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}]}], ")"}], " ", 
                    RowBox[{"Sec", "[", "\[Theta]x", "]"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Omega]y", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.008`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Theta]x", "2"], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Theta]y"}], "]"}]}], "+", 
                    RowBox[{"0.0064`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "\[Theta]y", "]"}], " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.08`"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Theta]y"}], "]"}], " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}], "-", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"Sin", "[", "\[Theta]y", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Cos", "[", "\[Theta]x", "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
                    RowBox[{"Tan", "[", "\[Theta]x", "]"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
       RowBox[{
         RowBox[{"0.08`", " ", 
           RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "-", 
         RowBox[{"0.1`", " ", 
           RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ")"}], "2"]],
   "\[Theta]x","\[Theta]y","Ax","Ay","\[Theta]x","\[Theta]y","\[Omega]x",
   "\[Omega]y",InterpretationBox["", Automatic],InterpretationBox[
   "", Automatic],InterpretationBox[" ", None],{
   6, 2, 2, 2, None, None, False, False, False, 
    RowBox[{"{", 
      RowBox[{"\[Tau]x", ",", "\[Tau]y"}], "}"}], "Automatic"},{}},
  "NonlinearStateSpaceModelMinimal",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#9, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #]}, {#10, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #2]}, {#11, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #3]}, {#12, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #4]}, {#13, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #5]}, {#14, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #6]}, {#15, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #7]}, {#16, 
          TooltipBox[
           StyleBox[
            StyleBox[
            "\[FilledSmallSquare]", FontColor -> 
             RGBColor[
              0.6499999999999999, 0.6000000000000001, 0.55]]], #8]}}, {}, 
        GridBoxDividers -> {
         "Rows" -> {False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxItemStyle -> {"Columns" -> {
            Directive["InlineText", Smaller, 
             GrayLevel[0.5]], {Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalN]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None]], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"NonlinearStateSpaceModel[", "{", "{", 
     TemplateSlotSequence[{1, 6}, ","], "}", ",", "{", 
     TemplateSlotSequence[{7, 8}, ","], "}", "}", ",", "{", 
     TemplateSlotSequence[{9, 14}, ","], "}", ",", 
     RowBox[{"{", 
       RowBox[{"\[Tau]x", ",", "\[Tau]y"}], "}"}], ",", "{", 
     TemplateSlotSequence[{15, 16}, ","], "}", ",", "Automatic", 
     ", SamplingPeriod -> ", #17, "]"}]& ),
  Tooltip->NonlinearStateSpaceModel]], "Output",
 CellChangeTimes->{
  3.7217575378055983`*^9, 3.721758757521278*^9, {3.7217596254743724`*^9, 
   3.7217596463774624`*^9}, 3.7217604618670034`*^9, {3.7217627964044523`*^9, 
   3.7217628004428563`*^9}, 3.721764537203515*^9, 3.7217645977925735`*^9, 
   3.721783861325615*^9, 3.7217893659940023`*^9, 3.721789466043002*^9, 
   3.721789526471002*^9, 3.721789636707002*^9, {3.721791750446994*^9, 
   3.7217917603379936`*^9}, 3.7217952458559837`*^9, 3.721798283407797*^9, 
   3.7217985586223154`*^9, 3.721798671222574*^9, 3.7217987611825695`*^9, 
   3.7218611523307276`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"resp", " ", "=", " ", 
   RowBox[{"OutputResponse", "[", 
    RowBox[{"nsys", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "*", " ", 
        RowBox[{"UnitStep", "[", "t", "]"}]}], ",", 
       RowBox[{"1", " ", "*", 
        RowBox[{"UnitStep", "[", "t", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1.0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"respx", " ", "=", " ", 
   RowBox[{"resp", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"respx", " ", "=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "respx", "]"}], ",", 
     RowBox[{"Sin", "[", "respx", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"respy", " ", "=", " ", 
   RowBox[{"resp", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"respy", " ", "=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "respy", "]"}], ",", " ", 
     RowBox[{"Sin", "[", "respy", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"respx", ",", " ", "respy"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", "  ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(x\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(y\)]\)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t (s)\>\"", ",", "\"\<\[CapitalDelta]\[Theta] (rad)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Plant Step Response\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwlzU0ogwEAxvFtkVDkMGorphYnW81yWeIdO1jGmnzE1Fq2tpRJUSOjli3T
Dg7K1xbJYS/tg9K8aTSLpuyyXRwsinzMVjssxMH7vA5Pv3ou/3q9RWPgsFgs
Pj1obBocDlIZghdga6G6LamDKVGlHhaPuSfgznrnHPSd+5dgy7zayfwfNauQ
GuF6YKGr6hhuUO8nsEHDjsCbKBmHA2JvAtpWnpMwRuzewazn7BWq7Pk8fNga
LcCn/PU30yOPOCFalztVBo21Pj4kzGt1MGAjBfArdyiCe2G5BLYrZXIYDzmV
8NNq74NDFSYj5BmmZ6CwZIFxqvF2ltHx64bSe6nkgjadGG+Gmx1i2b8ZBbRk
BekouqL4I9RxfjQx2v5yqxa+9SxboFeRm4RF1d3bsFVVug+FXBcJ/abTA5ju
1QWhw/FCQSISjsDFS+4V/AM8rvol
  "]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0979494640113514`\\\"}]\\)\[NoBreak], step \
size is effectively zero; singularity or stiff system suspected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", \
ButtonNote -> \\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.721798928463296*^9, 3.7217989529717464`*^9}, {
   3.7217990020076494`*^9, 3.721799006134062*^9}, {3.7217990449089394`*^9, 
   3.7217990734557934`*^9}, 3.721799127837231*^9, {3.7217992113725843`*^9, 
   3.721799217046151*^9}, 3.721861152468686*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+TGHRP68mF2lTKX95ce3QtjX1JIC9Oqewfu77SzYkuxdpP8fEcuxO3ZzH5kf
Tx2j7IqOHngte9m+j8oCDY8PbsYFonheV8zWVDr//PSp2pX8/vTNq8zZg0wW
6Fw8SHq/OIPyL3yrn2SzgMWKjf61QhB/919z1iseC+wvoKNq0Avvp3qv2vfy
1yffOlIeCWMffwoeFBpgwfqBVN03uRT4FCUvVzDE59MhpYb2lYIKzHUGT42w
YEE6c7tvpzBeuNISXznOghvPPE2st87Al7bTyaWTfHzWKs2Ol6ZQooDyfzDD
5/PF/vZ1mv3o/A5GA5rj82NAibw+OQmmTukXsUX+fk9LYu2ZIaR4y1niF4EN
+5+Wrc9XFsCmP657bSTEhglyW6M1m4C1dLaalYmwoeTqSEtUgiiWL5bENhZj
Q8yhuKRze5YgRsf65m8JNlDObEZVg+Nw6tQyJdPlbNhuOnZLmDyJ9O/+KSlf
yYZz5ganQK8Nrf0W42y2mg1f7Dru2g/WwhDbZLpiLRvENh2M3a1NwKpXCjw+
sI4NbzJDnGWvsuHFvtJdVbJsON599f6S9icUejak+aACGyZzXgTtJc+DQ/Ke
K9WKbAg9YUWkN8+BFppYZr6JDZl7eP2vExhIor/gzR9lNrzyFu8/VLkAHBmf
Q4dV2TBkEis0o7UApcY7eDXb2GD3KMqt9ZMolnK5L+qIOhvqrDSC8rWEcL+n
uZvqdrChmRT+4ZWQEG5R6YUstPh8DRZ/z9zUBqqjm1zqtdmw98eftIhmMYyg
2DVrqcsGyZSDFVPVv4FinpbSoMcGxljoHlntWVQY4LTbWp8NK48MB7x/WYvu
P5dpbTTg82033/dXlIh71//1PQpsGM+TmB12EcWNZxJXNhuxIcr/sgGVPxcq
bLF6Z2PKBnFu5ZC00jyaOip5pOUAG9wtTHc92kDEWkKre2zN2SDfWuvhdbAX
8l/fivl7hA0y7GUHBKkMiGk1VrG3YsPyvkteeWGz6BSBUNZ6lA0i/6532onz
+zWNn27H7NjwzWWyJdGViK11vL7Qdoxvv8txx6WieTQUpffMwZENEbpNzye5
M6j6w/ieDmc2xOafzjAYEsBfUD+1H3dhwz7efnWL8WkIJV7xJ7mx4enJszcb
OQK4wy6N1U4ebJi2FP/xWp6FtNx6P5C92KBPt7loFSOESdzJsXQ+ywbRH6w9
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
AcIoCGA=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t (s)\"", TraditionalForm], 
       FormBox["\"\[CapitalDelta]\[Theta] (rad)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Plant Step Response\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-3.138892311132338, 3.1415356794995017`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(x\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(y\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7217989291113605`*^9, 3.721798953866836*^9}, {
   3.721799002027652*^9, 3.721799006376086*^9}, {3.7217990451499634`*^9, 
   3.7217990736038084`*^9}, 3.7217991298834357`*^9, {3.7217992114925957`*^9, 
   3.7217992188073273`*^9}, 3.7218611532854414`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Pole", " ", "Placement"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"kpole", " ", "=", " ", 
    RowBox[{"StateFeedbackGains", "[", 
     RowBox[{"nsys", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         RowBox[{"3", "I"}]}], ",", 
        RowBox[{
         RowBox[{"-", "16"}], "-", 
         RowBox[{"3", "I"}]}], ",", " ", 
        RowBox[{
         RowBox[{"-", "17"}], "+", 
         RowBox[{"5", "I"}]}], ",", " ", 
        RowBox[{
         RowBox[{"-", "17"}], "-", 
         RowBox[{"5", "I"}]}]}], "}"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"LQR", " ", "Controller"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qcost", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", " ", "1*^-1", 
        ",", " ", "1*^-1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"qcost", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", " ", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1*^-1", ",", " ", "1*^-1"}], 
        "}"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qycost", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rcost", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{".1", ",", " ", ".1"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"klqr", " ", "=", " ", 
     RowBox[{"LQOutputRegulatorGains", "[", 
      RowBox[{"nsys", ",", 
       RowBox[{"{", 
        RowBox[{"qycost", ",", " ", "rcost"}], "}"}]}], "]"}]}], "*)"}], 
   RowBox[{"(*", " ", 
    RowBox[{"\[Tau]x", ",", " ", "\[Tau]y"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"klqr", " ", "=", " ", 
    RowBox[{"LQRegulatorGains", "[", 
     RowBox[{"nsys", ",", 
      RowBox[{"{", 
       RowBox[{"qcost", ",", " ", "rcost"}], "}"}]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"\[Tau]x", ",", " ", "\[Tau]y"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"kmat", " ", "=", " ", 
    RowBox[{"TraditionalForm", "[", 
     RowBox[{"Normal", "@", 
      RowBox[{
       RowBox[{"CoefficientArrays", "[", 
        RowBox[{"klqr", ",", 
         RowBox[{"{", 
          RowBox[{
          "Ax", ",", " ", "Ay", ",", " ", "\[Theta]x", ",", "\[Theta]y", ",", 
           "\[Omega]x", ",", "\[Omega]y"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"TraditionalForm", "[", "qcost", "]"}], "\[IndentingNewLine]", 
   RowBox[{"TraditionalForm", "[", "rcost", "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0F1IkwEYxfFNmorFpLIEw1IYaoQGg7wRsq0vN1Rk9qE1IUYb6yKTpWJb
W+CKzZlCgSNzhhaBzmi5gcSQNkUSI7txJBrEihnSh7hSspvZ+38vHn5w4HDg
KTTc0BnTJBLJYeHQVHrx0qvwD1VeQKrHusqFKxgryzag7GpPMw49OmXD0cjL
e1hur3OJ+c/cBxi+vG8QNzW7Q9gf/j6BRTrpG3w37Z/DC0effEBH98oCzqiG
l/DX4OQq1jiTSYwPNG1iIjn7T9zzB9PGBT09sSw0HRw9gKprfYcw4PAX4Nba
izJ89lqtxBPaCjXOjbu0+PeWsx4b5GYT5hnb2lGRcUfUUjxvxRHH+wFsPdP1
FNe05ufinud3BFORvilU2tzbQUGpersgxP8mNccxkdN7GnfIDBqs7ZLWYMnE
Uj16V8casSGVb8TczCPXsfVr9U2UZDe248ZsaBq39qS/xZWkJ47nfPoEfrNG
lyOCyx3Dn7A8c/0PqrP2bmDtLksK7+9vE/U1e6ujYs8n2t2yqMOHQ1Yz6uMl
LeiQey3Y2Z/RgYaKMTuuxxT5U4Luk5WiymNFCqySfylG2fmR2zOCHwMhO7rm
bU6M2grvYk5wpxvPLlZ50PG5sxfT9Y9F/wP5dXhZ
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.1622776601707434`", " ", "Ax"}], "+", 
    RowBox[{"4.052933434337127`", " ", "\[Theta]x"}], "+", 
    RowBox[{"1.016082411753441`", " ", "\[Omega]x"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.1622776601699507`", " ", "Ay"}], "+", 
    RowBox[{"4.048427677691427`", " ", "\[Theta]y"}], "+", 
    RowBox[{"1.010310818367191`", " ", "\[Omega]y"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.721757326093429*^9, 3.7217573620870285`*^9}, {
   3.721757395519371*^9, 3.721757408816701*^9}, {3.7217574502298417`*^9, 
   3.72175745671349*^9}, {3.721757548613679*^9, 3.7217575649713144`*^9}, {
   3.721757628556672*^9, 3.7217576595207686`*^9}, 3.7217577558930087`*^9, {
   3.721757891885805*^9, 3.721757930135154*^9}, {3.721758206473278*^9, 
   3.721758256710278*^9}, 3.721758286860278*^9, {3.7217584318442783`*^9, 
   3.721758453119278*^9}, {3.721758483745278*^9, 3.721758534796278*^9}, {
   3.721758608843278*^9, 3.721758636245278*^9}, {3.7217586763582783`*^9, 
   3.721758765611278*^9}, 3.721758829197278*^9, {3.7217588679362783`*^9, 
   3.721758912560088*^9}, {3.721758975260358*^9, 3.721758982557087*^9}, {
   3.7217590888437147`*^9, 3.721759123425173*^9}, {3.7217592530931377`*^9, 
   3.7217593175825863`*^9}, {3.7217593913019576`*^9, 3.721759475293356*^9}, {
   3.7217595159864244`*^9, 3.72175954053888*^9}, {3.72175965295512*^9, 
   3.721759669142739*^9}, {3.721759721744999*^9, 3.7217597776815915`*^9}, {
   3.721759813028126*^9, 3.721759834954318*^9}, 3.7217598729651194`*^9, {
   3.721759908864709*^9, 3.7217599667064924`*^9}, 3.7217600641822386`*^9, 
   3.7217601209019103`*^9, 3.721760269702789*^9, 3.721760463293146*^9, {
   3.721762818372649*^9, 3.7217628697297845`*^9}, {3.721762900139825*^9, 
   3.72176291839365*^9}, {3.721762953915202*^9, 3.721763040223832*^9}, 
   3.721763080394849*^9, 3.721763372775084*^9, {3.7217634039742036`*^9, 
   3.7217634322880344`*^9}, {3.7217634874445496`*^9, 
   3.7217635336071653`*^9}, {3.721763644594263*^9, 3.721763689687772*^9}, {
   3.7217637394867516`*^9, 3.7217637638481874`*^9}, {3.7217643877035666`*^9, 
   3.7217644012829247`*^9}, {3.721764618723666*^9, 3.721764643495143*^9}, 
   3.7217838670486145`*^9, 3.7217891495340023`*^9, {3.7217893450580025`*^9, 
   3.721789366731002*^9}, 3.721789527555002*^9, 3.721789814648002*^9, 
   3.721790053321002*^9, {3.7217901363172035`*^9, 3.7217901473414083`*^9}, {
   3.7217901929825344`*^9, 3.7217902077654905`*^9}, {3.7217902420533466`*^9, 
   3.7217902764882326`*^9}, {3.721790347674467*^9, 3.721790356931318*^9}, {
   3.721790411037568*^9, 3.7217904311655807`*^9}, 3.7217905467271357`*^9, {
   3.7217917702449937`*^9, 3.7217918073439937`*^9}, 3.721795246346984*^9, 
   3.721798637896242*^9, {3.7217986787263246`*^9, 3.7217986893143835`*^9}, 
   3.7217987733637877`*^9, 3.7218611537572994`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.1622776601707434`", "0", "4.052933434337127`", "0", 
      "1.016082411753441`", "0"},
     {"0", "3.1622776601699507`", "0", "4.048427677691427`", "0", 
      "1.010310818367191`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.721757326093429*^9, 3.7217573620870285`*^9}, {
   3.721757395519371*^9, 3.721757408816701*^9}, {3.7217574502298417`*^9, 
   3.72175745671349*^9}, {3.721757548613679*^9, 3.7217575649713144`*^9}, {
   3.721757628556672*^9, 3.7217576595207686`*^9}, 3.7217577558930087`*^9, {
   3.721757891885805*^9, 3.721757930135154*^9}, {3.721758206473278*^9, 
   3.721758256710278*^9}, 3.721758286860278*^9, {3.7217584318442783`*^9, 
   3.721758453119278*^9}, {3.721758483745278*^9, 3.721758534796278*^9}, {
   3.721758608843278*^9, 3.721758636245278*^9}, {3.7217586763582783`*^9, 
   3.721758765611278*^9}, 3.721758829197278*^9, {3.7217588679362783`*^9, 
   3.721758912560088*^9}, {3.721758975260358*^9, 3.721758982557087*^9}, {
   3.7217590888437147`*^9, 3.721759123425173*^9}, {3.7217592530931377`*^9, 
   3.7217593175825863`*^9}, {3.7217593913019576`*^9, 3.721759475293356*^9}, {
   3.7217595159864244`*^9, 3.72175954053888*^9}, {3.72175965295512*^9, 
   3.721759669142739*^9}, {3.721759721744999*^9, 3.7217597776815915`*^9}, {
   3.721759813028126*^9, 3.721759834954318*^9}, 3.7217598729651194`*^9, {
   3.721759908864709*^9, 3.7217599667064924`*^9}, 3.7217600641822386`*^9, 
   3.7217601209019103`*^9, 3.721760269702789*^9, 3.721760463293146*^9, {
   3.721762818372649*^9, 3.7217628697297845`*^9}, {3.721762900139825*^9, 
   3.72176291839365*^9}, {3.721762953915202*^9, 3.721763040223832*^9}, 
   3.721763080394849*^9, 3.721763372775084*^9, {3.7217634039742036`*^9, 
   3.7217634322880344`*^9}, {3.7217634874445496`*^9, 
   3.7217635336071653`*^9}, {3.721763644594263*^9, 3.721763689687772*^9}, {
   3.7217637394867516`*^9, 3.7217637638481874`*^9}, {3.7217643877035666`*^9, 
   3.7217644012829247`*^9}, {3.721764618723666*^9, 3.721764643495143*^9}, 
   3.7217838670486145`*^9, 3.7217891495340023`*^9, {3.7217893450580025`*^9, 
   3.721789366731002*^9}, 3.721789527555002*^9, 3.721789814648002*^9, 
   3.721790053321002*^9, {3.7217901363172035`*^9, 3.7217901473414083`*^9}, {
   3.7217901929825344`*^9, 3.7217902077654905`*^9}, {3.7217902420533466`*^9, 
   3.7217902764882326`*^9}, {3.721790347674467*^9, 3.721790356931318*^9}, {
   3.721790411037568*^9, 3.7217904311655807`*^9}, 3.7217905467271357`*^9, {
   3.7217917702449937`*^9, 3.7217918073439937`*^9}, 3.721795246346984*^9, 
   3.721798637896242*^9, {3.7217986787263246`*^9, 3.7217986893143835`*^9}, 
   3.7217987733637877`*^9, 3.721861153763298*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox["1", "10"], "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox["1", "10"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.721757326093429*^9, 3.7217573620870285`*^9}, {
   3.721757395519371*^9, 3.721757408816701*^9}, {3.7217574502298417`*^9, 
   3.72175745671349*^9}, {3.721757548613679*^9, 3.7217575649713144`*^9}, {
   3.721757628556672*^9, 3.7217576595207686`*^9}, 3.7217577558930087`*^9, {
   3.721757891885805*^9, 3.721757930135154*^9}, {3.721758206473278*^9, 
   3.721758256710278*^9}, 3.721758286860278*^9, {3.7217584318442783`*^9, 
   3.721758453119278*^9}, {3.721758483745278*^9, 3.721758534796278*^9}, {
   3.721758608843278*^9, 3.721758636245278*^9}, {3.7217586763582783`*^9, 
   3.721758765611278*^9}, 3.721758829197278*^9, {3.7217588679362783`*^9, 
   3.721758912560088*^9}, {3.721758975260358*^9, 3.721758982557087*^9}, {
   3.7217590888437147`*^9, 3.721759123425173*^9}, {3.7217592530931377`*^9, 
   3.7217593175825863`*^9}, {3.7217593913019576`*^9, 3.721759475293356*^9}, {
   3.7217595159864244`*^9, 3.72175954053888*^9}, {3.72175965295512*^9, 
   3.721759669142739*^9}, {3.721759721744999*^9, 3.7217597776815915`*^9}, {
   3.721759813028126*^9, 3.721759834954318*^9}, 3.7217598729651194`*^9, {
   3.721759908864709*^9, 3.7217599667064924`*^9}, 3.7217600641822386`*^9, 
   3.7217601209019103`*^9, 3.721760269702789*^9, 3.721760463293146*^9, {
   3.721762818372649*^9, 3.7217628697297845`*^9}, {3.721762900139825*^9, 
   3.72176291839365*^9}, {3.721762953915202*^9, 3.721763040223832*^9}, 
   3.721763080394849*^9, 3.721763372775084*^9, {3.7217634039742036`*^9, 
   3.7217634322880344`*^9}, {3.7217634874445496`*^9, 
   3.7217635336071653`*^9}, {3.721763644594263*^9, 3.721763689687772*^9}, {
   3.7217637394867516`*^9, 3.7217637638481874`*^9}, {3.7217643877035666`*^9, 
   3.7217644012829247`*^9}, {3.721764618723666*^9, 3.721764643495143*^9}, 
   3.7217838670486145`*^9, 3.7217891495340023`*^9, {3.7217893450580025`*^9, 
   3.721789366731002*^9}, 3.721789527555002*^9, 3.721789814648002*^9, 
   3.721790053321002*^9, {3.7217901363172035`*^9, 3.7217901473414083`*^9}, {
   3.7217901929825344`*^9, 3.7217902077654905`*^9}, {3.7217902420533466`*^9, 
   3.7217902764882326`*^9}, {3.721790347674467*^9, 3.721790356931318*^9}, {
   3.721790411037568*^9, 3.7217904311655807`*^9}, 3.7217905467271357`*^9, {
   3.7217917702449937`*^9, 3.7217918073439937`*^9}, 3.721795246346984*^9, 
   3.721798637896242*^9, {3.7217986787263246`*^9, 3.7217986893143835`*^9}, 
   3.7217987733637877`*^9, 3.721861153766297*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.1`", "0.`"},
     {"0.`", "0.1`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.721757326093429*^9, 3.7217573620870285`*^9}, {
   3.721757395519371*^9, 3.721757408816701*^9}, {3.7217574502298417`*^9, 
   3.72175745671349*^9}, {3.721757548613679*^9, 3.7217575649713144`*^9}, {
   3.721757628556672*^9, 3.7217576595207686`*^9}, 3.7217577558930087`*^9, {
   3.721757891885805*^9, 3.721757930135154*^9}, {3.721758206473278*^9, 
   3.721758256710278*^9}, 3.721758286860278*^9, {3.7217584318442783`*^9, 
   3.721758453119278*^9}, {3.721758483745278*^9, 3.721758534796278*^9}, {
   3.721758608843278*^9, 3.721758636245278*^9}, {3.7217586763582783`*^9, 
   3.721758765611278*^9}, 3.721758829197278*^9, {3.7217588679362783`*^9, 
   3.721758912560088*^9}, {3.721758975260358*^9, 3.721758982557087*^9}, {
   3.7217590888437147`*^9, 3.721759123425173*^9}, {3.7217592530931377`*^9, 
   3.7217593175825863`*^9}, {3.7217593913019576`*^9, 3.721759475293356*^9}, {
   3.7217595159864244`*^9, 3.72175954053888*^9}, {3.72175965295512*^9, 
   3.721759669142739*^9}, {3.721759721744999*^9, 3.7217597776815915`*^9}, {
   3.721759813028126*^9, 3.721759834954318*^9}, 3.7217598729651194`*^9, {
   3.721759908864709*^9, 3.7217599667064924`*^9}, 3.7217600641822386`*^9, 
   3.7217601209019103`*^9, 3.721760269702789*^9, 3.721760463293146*^9, {
   3.721762818372649*^9, 3.7217628697297845`*^9}, {3.721762900139825*^9, 
   3.72176291839365*^9}, {3.721762953915202*^9, 3.721763040223832*^9}, 
   3.721763080394849*^9, 3.721763372775084*^9, {3.7217634039742036`*^9, 
   3.7217634322880344`*^9}, {3.7217634874445496`*^9, 
   3.7217635336071653`*^9}, {3.721763644594263*^9, 3.721763689687772*^9}, {
   3.7217637394867516`*^9, 3.7217637638481874`*^9}, {3.7217643877035666`*^9, 
   3.7217644012829247`*^9}, {3.721764618723666*^9, 3.721764643495143*^9}, 
   3.7217838670486145`*^9, 3.7217891495340023`*^9, {3.7217893450580025`*^9, 
   3.721789366731002*^9}, 3.721789527555002*^9, 3.721789814648002*^9, 
   3.721790053321002*^9, {3.7217901363172035`*^9, 3.7217901473414083`*^9}, {
   3.7217901929825344`*^9, 3.7217902077654905`*^9}, {3.7217902420533466`*^9, 
   3.7217902764882326`*^9}, {3.721790347674467*^9, 3.721790356931318*^9}, {
   3.721790411037568*^9, 3.7217904311655807`*^9}, 3.7217905467271357`*^9, {
   3.7217917702449937`*^9, 3.7217918073439937`*^9}, 3.721795246346984*^9, 
   3.721798637896242*^9, {3.7217986787263246`*^9, 3.7217986893143835`*^9}, 
   3.7217987733637877`*^9, 3.721861153767297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Closed", "-", 
    RowBox[{"Loop", " ", "Analysis"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tlim", " ", "=", " ", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", " ", "=", "klqr"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nsyscl", " ", "=", " ", 
     RowBox[{"SystemsModelStateFeedbackConnect", "[", 
      RowBox[{"nsys", ",", " ", "k"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ref", "[", "t", "]"}], " ", "=", " ", 
     RowBox[{"1", "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"UnitStep", "[", "t", "]"}], ",", " ", 
        RowBox[{"UnitStep", "[", "t", "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rcl", " ", "=", " ", 
     RowBox[{"OutputResponse", "[", 
      RowBox[{"nsyscl", ",", " ", 
       RowBox[{"ref", "[", "t", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tlim"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"rcl", "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "tlim"}], "}"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"final", " ", "value"}], " ", "..."}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"rcl", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tlim"}], "}"}], ",", "  ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(x\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(y\)]\)\>\""}], "}"}]}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t (s)\>\"", ",", "\"\<\[CapitalDelta]\[Theta] (rad)\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Closed Loop Step Response\>\""}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ref", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"ref", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tlim"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(x\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(y\)]\)\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ctrl", " ", "=", " ", 
      RowBox[{"PIDTune", "[", 
       RowBox[{"nsys", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<PID\>\"", ",", " ", "Automatic"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"nsyscl", " ", "=", " ", 
      RowBox[{"PIDTune", "[", 
       RowBox[{"nsys", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<PID\>\"", ",", " ", "Automatic"}], "}"}], ",", " ", 
        "\"\<ReferenceOutput\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"nsysol", " ", "=", " ", 
        RowBox[{"SystemsModelSeriesConnect", "[", 
         RowBox[{"ctrl", ",", " ", "nsys"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nsyscl", " ", "=", " ", 
        RowBox[{"SystemsModelFeedbackConnect", "[", 
         RowBox[{"nsysol", ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}],
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"respcl", " ", "=", " ", 
      RowBox[{"OutputResponse", "[", 
       RowBox[{"nsyscl", ",", " ", 
        RowBox[{"UnitStep", "[", "t", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{"%", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.721757394724292*^9, 3.7217574080526247`*^9}, {
   3.7217574466014786`*^9, 3.7217574564744663`*^9}, {3.7217575564184594`*^9, 
   3.721757658143631*^9}, {3.721757741460896*^9, 3.7217577545152845`*^9}, {
   3.721757832747635*^9, 3.721757928667447*^9}, {3.721758104540278*^9, 
   3.721758135335278*^9}, {3.721758192041278*^9, 3.721758285336278*^9}, {
   3.7217583249432783`*^9, 3.721758367173278*^9}, {3.721758413039278*^9, 
   3.721758533894278*^9}, {3.721758607547278*^9, 3.7217586349252777`*^9}, {
   3.7217586702482777`*^9, 3.7217587415832777`*^9}, {3.7217588066422777`*^9, 
   3.7217589412849607`*^9}, {3.7217589726690984`*^9, 
   3.7217589813279643`*^9}, {3.721759093404171*^9, 3.7217591220850387`*^9}, {
   3.7217592498528137`*^9, 3.7217593162404523`*^9}, {3.7217593881086383`*^9, 
   3.721759539251751*^9}, {3.7217596676685915`*^9, 3.7217596679696217`*^9}, {
   3.721759702411065*^9, 3.721759966390461*^9}, {3.72176002028985*^9, 
   3.721760046123433*^9}, {3.721760590266842*^9, 3.7217605909939146`*^9}, {
   3.7217628820640173`*^9, 3.7217628931651278`*^9}, {3.721762927659577*^9, 
   3.721762927900601*^9}, {3.721763171139922*^9, 3.7217631765424623`*^9}, {
   3.7217635213959446`*^9, 3.7217635215269575`*^9}, {3.7217637166644697`*^9, 
   3.7217637254023433`*^9}, {3.7217637809739*^9, 3.7217637931461167`*^9}, {
   3.721763871302932*^9, 3.721764058077607*^9}, {3.721764298409638*^9, 
   3.7217643142452216`*^9}, 3.72179053176864*^9, {3.721790571903653*^9, 
   3.721790573427806*^9}, 3.721791962071994*^9, {3.721798218782335*^9, 
   3.7217982233707933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999480122835092`", ",", "0.999564604671274`"}], "}"}]], "Output",
 CellChangeTimes->{{3.721757326093429*^9, 3.7217573620870285`*^9}, {
   3.721757395519371*^9, 3.721757408816701*^9}, {3.7217574502298417`*^9, 
   3.72175745671349*^9}, {3.721757548613679*^9, 3.7217575649713144`*^9}, {
   3.721757628556672*^9, 3.7217576595207686`*^9}, 3.7217577558930087`*^9, {
   3.721757891885805*^9, 3.721757930135154*^9}, {3.721758206473278*^9, 
   3.721758256710278*^9}, 3.721758286860278*^9, {3.7217584318442783`*^9, 
   3.721758453119278*^9}, {3.721758483745278*^9, 3.721758534796278*^9}, {
   3.721758608843278*^9, 3.721758636245278*^9}, {3.7217586763582783`*^9, 
   3.721758765611278*^9}, 3.721758829197278*^9, {3.7217588679362783`*^9, 
   3.721758912560088*^9}, {3.721758975260358*^9, 3.721758982557087*^9}, {
   3.7217590888437147`*^9, 3.721759123425173*^9}, {3.7217592530931377`*^9, 
   3.7217593175825863`*^9}, {3.7217593913019576`*^9, 3.721759475293356*^9}, {
   3.7217595159864244`*^9, 3.72175954053888*^9}, {3.72175965295512*^9, 
   3.721759669142739*^9}, {3.721759721744999*^9, 3.7217597776815915`*^9}, {
   3.721759813028126*^9, 3.721759834954318*^9}, 3.7217598729651194`*^9, {
   3.721759908864709*^9, 3.7217599667064924`*^9}, 3.721760022110032*^9, 
   3.721760510346851*^9, 3.721760591755991*^9, {3.7217628282776394`*^9, 
   3.7217630414299526`*^9}, 3.721763082278037*^9, 3.721763378209627*^9, 
   3.721763420263832*^9, {3.7217635218089857`*^9, 3.7217635350293074`*^9}, {
   3.7217636459714007`*^9, 3.721763793386141*^9}, {3.721763874817283*^9, 
   3.721763948402641*^9}, {3.7217639819819984`*^9, 3.721764058394639*^9}, {
   3.7217643026180587`*^9, 3.721764314577255*^9}, 3.721764402472043*^9, 
   3.721764645194313*^9, 3.721783868707615*^9, {3.7217893481710024`*^9, 
   3.721789366793002*^9}, 3.7217895286200023`*^9, 3.7217898202580023`*^9, {
   3.7217905322786913`*^9, 3.7217905757660394`*^9}, {3.7217917853729935`*^9, 
   3.7217918087809935`*^9}, 3.7217919623389935`*^9, 3.7217952464229836`*^9, {
   3.721798219640421*^9, 3.72179822373483*^9}, 3.7217986479762497`*^9, 
   3.7217993135297985`*^9, 3.7218611538162823`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV0H00FXYYB/CLDvL+doXhF0mTqY7J1pLnyaQXq+XKFNKLo828ZCuN3E5r
uh2TcvWySrdid1dpnbDysnYLcboMs3sRc3Ap5HLdXwm3ed1vfzznez7n+8f3
nMfl4GFerC6Hw9nE7v+krk76ZW09cEXyLl1IOqDib+/Nm52VUFEqbUx52wG7
M7q7as8OwIYImU9mYg8cLj3idXVCBcuEps6t2A/jwuf1OjoUWnwtTxZseQn1
Nc+qWvzGQcJtOKH1HIS4tK2me9QTMFTxmp9eMwQ1i70X7iVqYTj7TtKY/jAU
iuvmHZZPg3IuxS/YVwVo+/jn0PuzsKJN9n6Exwh4yborn61cgKcHjhW5aEeg
DUM1RRoOXjm+46a2fBQSjOIV7Wt0seDrQBF/pxoaO8Mfm53Xw5rNWRpDpRpC
g3b3DwwswlsXuAr/L8bAN/9seL6bPipXfd+QVTYGffMX2746aYDlJ58nG5lp
YHBri9i21hDr4zGmcJcGSq4p0+QuRnh71tx59rIGJJl6P3ocN8bLsRGqY00a
mIyJGDn0hwneFb24oNJqwDjwDK90iRnK1sdHLl9KgW8xaNIfZY4G0jrhKqRg
8sST07HdAhdFPrjhHklhw7HP52qnLXCh3HjM/SgF0S/Z4mUiSxTxbl02z6QQ
HebTvDjYCq3fmWam5FEoa4+9+GTKCs/z04WyIgrrmkp0h36yRjNvy9MzZRSW
bjo0eTHQBnnbLvGDaiis9Vmb+3DIBjmCEF7AnxSU4+caxAIucoujUC6noP4w
RGDvbYvzqQevKzopuI96jei02mLydw3q2F4KdW4piuRTS7Apq1iV/ZJCTlt7
DM/NDjuyGo9IXlGgodW5unV2mOi5rst2lMJvYdxP131jj5NGvSVBGgri5owb
L6wcsEg6dr3lNQWtLCrd6qkDbvvH44z7Wwp9uVWTFknvoYh/QGo3SWFKvt7+
BzNHBHGDv2SKQvIl1+o0qSPqBzrLrd9RWNLsajEQ7YQC3kO/j/6lENp+b9Zx
3gm/HQrY+ME0hfF9BQndd53xjvc5D/MZClX7iwVmnxFMTS0rqmV+1JIQ3LuD
4ED2JxeeMZf7r7S8H0LQdF91agPzPUeJaHs4wSplK7Qw53XmPcg+SLCwfmN5
F3PKzjP9RmkEZ4aPbnrD7Il7NxgUEuQfz5hynGX/K3bQ67hDUMatLiDMrs6d
9YW/EjwQuyLYldlulrcrqJRgnF361RXM+pVb4gVSgvPn9jh5M/ev9rmm10rQ
/ndDeRBz98030a3tBC0zBfu2MneaFruJOwmqhlAdzPzXqEdJQC9Bh+BUTgiz
9DaRnVIRfJRoYhPJXGnbkx2iJvgqPf/SXuYHgjyeC2W9wQnr/cx3Y7i91RME
P86xMYllligUYqGWYJi+QvAlc/5GYdz+aYJzb7rn4phFJdtXr5lj+zm+RxOY
rxDjyYUFgnKnvuEk5v8AEKgsKQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t (s)\"", TraditionalForm], 
       FormBox["\"\[CapitalDelta]\[Theta] (rad)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.34}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Closed Loop Step Response\"", TraditionalForm], 
     PlotRange -> {{0, 8}, {0.3613015375763892, 0.9999480122723597}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(x\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(y\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.721757326093429*^9, 3.7217573620870285`*^9}, {
   3.721757395519371*^9, 3.721757408816701*^9}, {3.7217574502298417`*^9, 
   3.72175745671349*^9}, {3.721757548613679*^9, 3.7217575649713144`*^9}, {
   3.721757628556672*^9, 3.7217576595207686`*^9}, 3.7217577558930087`*^9, {
   3.721757891885805*^9, 3.721757930135154*^9}, {3.721758206473278*^9, 
   3.721758256710278*^9}, 3.721758286860278*^9, {3.7217584318442783`*^9, 
   3.721758453119278*^9}, {3.721758483745278*^9, 3.721758534796278*^9}, {
   3.721758608843278*^9, 3.721758636245278*^9}, {3.7217586763582783`*^9, 
   3.721758765611278*^9}, 3.721758829197278*^9, {3.7217588679362783`*^9, 
   3.721758912560088*^9}, {3.721758975260358*^9, 3.721758982557087*^9}, {
   3.7217590888437147`*^9, 3.721759123425173*^9}, {3.7217592530931377`*^9, 
   3.7217593175825863`*^9}, {3.7217593913019576`*^9, 3.721759475293356*^9}, {
   3.7217595159864244`*^9, 3.72175954053888*^9}, {3.72175965295512*^9, 
   3.721759669142739*^9}, {3.721759721744999*^9, 3.7217597776815915`*^9}, {
   3.721759813028126*^9, 3.721759834954318*^9}, 3.7217598729651194`*^9, {
   3.721759908864709*^9, 3.7217599667064924`*^9}, 3.721760022110032*^9, 
   3.721760510346851*^9, 3.721760591755991*^9, {3.7217628282776394`*^9, 
   3.7217630414299526`*^9}, 3.721763082278037*^9, 3.721763378209627*^9, 
   3.721763420263832*^9, {3.7217635218089857`*^9, 3.7217635350293074`*^9}, {
   3.7217636459714007`*^9, 3.721763793386141*^9}, {3.721763874817283*^9, 
   3.721763948402641*^9}, {3.7217639819819984`*^9, 3.721764058394639*^9}, {
   3.7217643026180587`*^9, 3.721764314577255*^9}, 3.721764402472043*^9, 
   3.721764645194313*^9, 3.721783868707615*^9, {3.7217893481710024`*^9, 
   3.721789366793002*^9}, 3.7217895286200023`*^9, 3.7217898202580023`*^9, {
   3.7217905322786913`*^9, 3.7217905757660394`*^9}, {3.7217917853729935`*^9, 
   3.7217918087809935`*^9}, 3.7217919623389935`*^9, 3.7217952464229836`*^9, {
   3.721798219640421*^9, 3.72179822373483*^9}, 3.7217986479762497`*^9, 
   3.7217993135297985`*^9, 3.7218611538892603`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"ref\\\", \\\"[\\\", \
\\\"0.0001634285714285714`\\\", \\\"]\\\"}]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.721789347938002*^9, 3.721789367162002*^9}, 
   3.721789528037002*^9, 3.7217898206850023`*^9, {3.721790532617725*^9, 
   3.7217905762370863`*^9}, {3.7217917858889933`*^9, 3.721791809281994*^9}, 
   3.7217919626909933`*^9, 3.7217952465729837`*^9, {3.721798220126469*^9, 
   3.7217982241988764`*^9}, 3.721798648490301*^9, 3.72179931394584*^9, 
   3.7218611539502416`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"ref\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]\\)\[NoBreak] does not exist. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.721789347938002*^9, 3.721789367162002*^9}, 
   3.721789528037002*^9, 3.7217898206850023`*^9, {3.721790532617725*^9, 
   3.7217905762370863`*^9}, {3.7217917858889933`*^9, 3.721791809281994*^9}, 
   3.7217919626909933`*^9, 3.7217952465729837`*^9, {3.721798220126469*^9, 
   3.7217982241988764`*^9}, 3.721798648490301*^9, 3.72179931394584*^9, 
   3.72186115398923*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] \
of \[NoBreak]\\!\\(\\*RowBox[{\\\"ref\\\", \\\"[\\\", \
\\\"0.32669404081632647`\\\", \\\"]\\\"}]\\)\[NoBreak] does not exist. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.721789347938002*^9, 3.721789367162002*^9}, 
   3.721789528037002*^9, 3.7217898206850023`*^9, {3.721790532617725*^9, 
   3.7217905762370863`*^9}, {3.7217917858889933`*^9, 3.721791809281994*^9}, 
   3.7217919626909933`*^9, 3.7217952465729837`*^9, {3.721798220126469*^9, 
   3.7217982241988764`*^9}, 3.721798648490301*^9, 3.72179931394584*^9, 
   3.721861154026219*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.721789347938002*^9, 3.721789367162002*^9}, 
   3.721789528037002*^9, 3.7217898206850023`*^9, {3.721790532617725*^9, 
   3.7217905762370863`*^9}, {3.7217917858889933`*^9, 3.721791809281994*^9}, 
   3.7217919626909933`*^9, 3.7217952465729837`*^9, {3.721798220126469*^9, 
   3.7217982241988764`*^9}, 3.721798648490301*^9, 3.72179931394584*^9, 
   3.721861154050212*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxFxXss1AEcAPBz17yO64jjJxFdNkzMo01FV4mkq9wlapJ5LaNo0bpqa9JZ
8ohYRafRoZJxorLyON0NrYRzl1u7nGsoj7ncHJvhqj98v3989nFJyOAkk0kk
Evuf/x9N/j0snuYHb/yr6XSCmkjavzGDqihuJbLgXYE2dVXEHXjPkJ/oAVEO
i59IAoqIWjg3p+DaPaINTsrSEvmEFDYtD6/5syCH3w35hoU5qeGYXNV3ScEE
nNFyxevx4jSsK/nWb2Skhft7ersH9+ngVF645Zm5RbjHzNfQeHEZrhdK1x12
rsAsRuczbtMq7NWnau/1MMByFnf+5TyJtXG6eZpM4UOGPyujO2nFFJgbGqOZ
mNgE764uiK5mGsPj62XyC7dM4MnwQSFDYgqLKtS8YRdzuO4uJd/9OhXWJ56d
SflgAVND8jgtdjT4Jn3SQhO7Gbbo8iSNsulw0NUTa5IVXFBbKNwhsILjovwH
zCKs4TeK5LKuJTzwi4g89XALvP1wir4sxAYO8A8obZvC1bqiT0K+LTznF8kn
fBmw26zXjNEILmVmyzJz7OD7ckUih2kPa7niUrIUfx1leyjwMgELB3Krflo7
wMt9sTesP+Ljpd16+qWt8NLwXuI2zRHOLHcV8zpwuwFX+kTcNpiraFx1XMd1
52vSVQ1OcHd8M592zBl+P5geMXYcfxvsYdUUiTc61gnY0XilsrK1MAHPPpmn
MefhnqxzQSb1uFuzA2X0Be7qpOyvf4Xbr3JOhbbgxu1H0vgduMbbv4Iygque
LsSNKHClZTNTqMS/zrqLDo7hHc+d+3Km8XbGj8LIObyVX8lx0eINibZj4kW8
TiYTlizj1QdKUuNXcIGI7e2zhj9ypuoNBvwvxvgvLw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 8}, {0., 7.999999836734694}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(x\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(y\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> T\
rue, FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.721757326093429*^9, 3.7217573620870285`*^9}, {
   3.721757395519371*^9, 3.721757408816701*^9}, {3.7217574502298417`*^9, 
   3.72175745671349*^9}, {3.721757548613679*^9, 3.7217575649713144`*^9}, {
   3.721757628556672*^9, 3.7217576595207686`*^9}, 3.7217577558930087`*^9, {
   3.721757891885805*^9, 3.721757930135154*^9}, {3.721758206473278*^9, 
   3.721758256710278*^9}, 3.721758286860278*^9, {3.7217584318442783`*^9, 
   3.721758453119278*^9}, {3.721758483745278*^9, 3.721758534796278*^9}, {
   3.721758608843278*^9, 3.721758636245278*^9}, {3.7217586763582783`*^9, 
   3.721758765611278*^9}, 3.721758829197278*^9, {3.7217588679362783`*^9, 
   3.721758912560088*^9}, {3.721758975260358*^9, 3.721758982557087*^9}, {
   3.7217590888437147`*^9, 3.721759123425173*^9}, {3.7217592530931377`*^9, 
   3.7217593175825863`*^9}, {3.7217593913019576`*^9, 3.721759475293356*^9}, {
   3.7217595159864244`*^9, 3.72175954053888*^9}, {3.72175965295512*^9, 
   3.721759669142739*^9}, {3.721759721744999*^9, 3.7217597776815915`*^9}, {
   3.721759813028126*^9, 3.721759834954318*^9}, 3.7217598729651194`*^9, {
   3.721759908864709*^9, 3.7217599667064924`*^9}, 3.721760022110032*^9, 
   3.721760510346851*^9, 3.721760591755991*^9, {3.7217628282776394`*^9, 
   3.7217630414299526`*^9}, 3.721763082278037*^9, 3.721763378209627*^9, 
   3.721763420263832*^9, {3.7217635218089857`*^9, 3.7217635350293074`*^9}, {
   3.7217636459714007`*^9, 3.721763793386141*^9}, {3.721763874817283*^9, 
   3.721763948402641*^9}, {3.7217639819819984`*^9, 3.721764058394639*^9}, {
   3.7217643026180587`*^9, 3.721764314577255*^9}, 3.721764402472043*^9, 
   3.721764645194313*^9, 3.721783868707615*^9, {3.7217893481710024`*^9, 
   3.721789366793002*^9}, 3.7217895286200023`*^9, 3.7217898202580023`*^9, {
   3.7217905322786913`*^9, 3.7217905757660394`*^9}, {3.7217917853729935`*^9, 
   3.7217918087809935`*^9}, 3.7217919623389935`*^9, 3.7217952464229836`*^9, {
   3.721798219640421*^9, 3.72179822373483*^9}, 3.7217986479762497`*^9, 
   3.7217993135297985`*^9, 3.721861154107195*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.721758483500278*^9, 3.721758488555278*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Jacobian", " ", "..."}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Jx", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{"\[Delta]x", ",", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]x", "[", "t", "]"}], ",", " ", 
            RowBox[{"\[Theta]y", "[", "t", "]"}]}], "}"}], "}"}]}], "]"}], 
       "]"}], "\[IndentingNewLine]", "Ju"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{"\[Delta]x", ",", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Tau]x", "[", "t", "]"}], ",", " ", 
            RowBox[{"\[Tau]y", "[", "t", "]"}]}], "}"}], "}"}]}], "]"}], 
       "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Jx", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]x", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"\[Theta]y", "[", "t", "]"}], "\[Rule]", "0"}], " ", ",", 
          " ", 
          RowBox[{
           RowBox[{"\[Tau]x", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
          " ", 
          RowBox[{
           RowBox[{"\[Tau]y", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", 
         "}"}]}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Ju", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]x", "[", "t", "]"}], "\[Rule]", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"\[Theta]y", "[", "t", "]"}], "\[Rule]", "0"}], " ", ",", 
          " ", 
          RowBox[{
           RowBox[{"\[Tau]x", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
          " ", 
          RowBox[{
           RowBox[{"\[Tau]y", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", 
         "}"}]}], "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "linearization", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ldx", " ", "=", " ", 
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{"\[Delta]x", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]x", "[", "t", "]"}], ",", " ", "0", ",", " ", "1"}],
         "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]y", "[", "t", "]"}], ",", " ", "0", ",", " ", "1"}],
         "}"}]}], "]"}], " ", "//", " ", 
     RowBox[{"Normal", "\[IndentingNewLine]", 
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{"ldx", ",", "t", ",", "s"}], "]"}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.72174694266278*^9, 3.721747023479861*^9}, {
   3.7217481658723154`*^9, 3.7217482990623155`*^9}, {3.7217483300623155`*^9, 
   3.721748341173315*^9}, {3.7217483953053155`*^9, 3.7217486674303155`*^9}, {
   3.7217488266253157`*^9, 3.7217488530873156`*^9}, {3.7217489115633154`*^9, 
   3.7217489314013157`*^9}, {3.7217489640853157`*^9, 
   3.7217490152403154`*^9}, {3.7217493330243154`*^9, 
   3.7217493977103157`*^9}, {3.7217494458203154`*^9, 
   3.7217494769563155`*^9}, {3.7217496630053153`*^9, 
   3.7217496706623154`*^9}, {3.721749791652315*^9, 3.7217500795293155`*^9}, {
   3.721750447803315*^9, 3.7217504548643155`*^9}, {3.7217505431393156`*^9, 
   3.7217505650033154`*^9}, {3.7217506613973155`*^9, 3.7217506647353153`*^9}, 
   3.7217507163313155`*^9, {3.7217509593673153`*^9, 3.7217509806723156`*^9}, {
   3.7217510225103154`*^9, 3.7217511032023153`*^9}, {3.7217511470593157`*^9, 
   3.7217512017813153`*^9}, {3.7217516846753154`*^9, 
   3.7217517326203156`*^9}, {3.7217518395003157`*^9, 
   3.7217520469583154`*^9}, {3.7217520836303153`*^9, 
   3.7217524493163157`*^9}, {3.7217532048353157`*^9, 
   3.7217532481103153`*^9}, {3.7217533110523157`*^9, 
   3.7217533717013154`*^9}, {3.7217534101613154`*^9, 3.721753491402315*^9}, {
   3.721753556652315*^9, 3.7217537789323153`*^9}, {3.7217538092533154`*^9, 
   3.7217538495523157`*^9}, {3.7217539200963154`*^9, 3.721754138755483*^9}, {
   3.7217542006971807`*^9, 3.7217542046847663`*^9}, {3.7217548539671955`*^9, 
   3.7217549421518283`*^9}, {3.7217550455804005`*^9, 3.721755257575598*^9}, {
   3.7217553056594057`*^9, 3.72175532040288*^9}, {3.7217553732811675`*^9, 
   3.7217554618290215`*^9}, {3.721755556798517*^9, 3.7217556164124784`*^9}, {
   3.7217556518050175`*^9, 3.721755659462783*^9}, {3.7217556942612624`*^9, 
   3.7217557019500313`*^9}, {3.721755739614797*^9, 3.721755742016037*^9}, {
   3.721755810299865*^9, 3.721755861313966*^9}, {3.721755988134647*^9, 
   3.721755993760209*^9}, {3.721756035141347*^9, 3.721756038241657*^9}, {
   3.721795063666834*^9, 3.721795067036171*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Pretty", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MyTeXForm", "[", "a_", "]"}], ":=", 
    RowBox[{"StringReplace", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"TeXForm", "[", "a", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Shortest", "[", 
          RowBox[{"\"\<\\\\text{\>\"", "~~", "s___", "~~", "\"\<}\>\""}], 
          "]"}], "\[Rule]", "s"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<$\>\"", "\[Rule]", "\"\<\>\""}], ",", " ", 
        RowBox[{"\"\<\\\\left\>\"", " ", "\[Rule]", " ", "\"\<\>\""}], ",", 
        " ", 
        RowBox[{"\"\<\\\\right\>\"", " ", "\[Rule]", " ", "\"\<\>\""}]}], 
       "}"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"unpretty", " ", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]x", " ", "\[Rule]", " ", 
        RowBox[{"\[Theta]x", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"\[Theta]y", " ", "\[Rule]", " ", 
        RowBox[{"\[Theta]y", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]x", " ", "\[Rule]", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]x", "[", "t", "]"}], ",", "t"}], "]"}]}], ",", " ", 
       RowBox[{"\[Omega]y", " ", "\[Rule]", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]y", "[", "t", "]"}], ",", " ", "t"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pretty", " ", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lx", "\[Rule]", " ", 
        SubscriptBox["l", "x"]}], ",", " ", 
       RowBox[{"ly", "\[Rule]", " ", 
        SubscriptBox["l", "y"]}], ",", " ", 
       RowBox[{"lz", "\[Rule]", " ", 
        SubscriptBox["l", "z"]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]x", "[", "t", "]"}], " ", "\[Rule]", " ", 
        SubscriptBox["\[Theta]", "x"]}], ",", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]x", "[", "t", "]"}], ",", "t"}], "]"}], " ", 
        "\[Rule]", " ", 
        SubscriptBox["\[Omega]", "x"]}], ",", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]x", "[", "t", "]"}], ",", "t"}], "]"}], ",", 
          "t"}], "]"}], " ", "\[Rule]", " ", 
        SubscriptBox["\[Alpha]", "x"]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]y", "[", "t", "]"}], " ", "\[Rule]", " ", 
        SubscriptBox["\[Theta]", "y"]}], ",", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]y", "[", "t", "]"}], ",", "t"}], "]"}], " ", 
        "\[Rule]", " ", 
        SubscriptBox["\[Omega]", "y"]}], ",", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]y", "[", "t", "]"}], ",", "t"}], "]"}], ",", 
          "t"}], "]"}], " ", "\[Rule]", " ", 
        SubscriptBox["\[Alpha]", "y"]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Tau]x", "[", "t", "]"}], "\[Rule]", " ", 
        SubscriptBox["\[Tau]", "x"]}], " ", ",", 
       RowBox[{
        RowBox[{"\[Tau]y", "[", "t", "]"}], " ", "\[Rule]", " ", 
        SubscriptBox["\[Tau]", "y"]}]}], " ", "\[IndentingNewLine]", "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"TraditionalForm", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Qx", "/.", "pretty"}], "]"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"TraditionalForm", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Qy", "/.", "pretty"}], "]"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"TraditionalForm", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{"\[Delta]x", "/.", "pretty"}], "]"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"TraditionalForm", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{"ldx", "/.", "pretty"}], "]"}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ex", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"\[Delta]x", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", "pretty"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MyTeXForm", "[", "ex", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ex", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"\[Delta]x", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", "pretty"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MyTeXForm", "[", "ex", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"MyTeXForm", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"\[Delta]x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", "pretty"}], "]"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"MyTeXForm", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"\[Delta]x", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/.", "pretty"}], "]"}], "]"}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "...", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qx", "/.", "params"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qy", "/.", "params"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.72174694266278*^9, 3.721747023479861*^9}, {
   3.7217481658723154`*^9, 3.7217482990623155`*^9}, {3.7217483300623155`*^9, 
   3.721748341173315*^9}, {3.7217483953053155`*^9, 3.7217486674303155`*^9}, {
   3.7217488266253157`*^9, 3.7217488530873156`*^9}, {3.7217489115633154`*^9, 
   3.7217489314013157`*^9}, {3.7217489640853157`*^9, 
   3.7217490152403154`*^9}, {3.7217493330243154`*^9, 
   3.7217493977103157`*^9}, {3.7217494458203154`*^9, 
   3.7217494769563155`*^9}, {3.7217496630053153`*^9, 
   3.7217496706623154`*^9}, {3.721749791652315*^9, 3.7217500795293155`*^9}, {
   3.721750447803315*^9, 3.7217504548643155`*^9}, {3.7217505431393156`*^9, 
   3.7217505650033154`*^9}, {3.7217506613973155`*^9, 3.7217506647353153`*^9}, 
   3.7217507163313155`*^9, {3.7217509593673153`*^9, 3.7217509806723156`*^9}, {
   3.7217510225103154`*^9, 3.7217511032023153`*^9}, {3.7217511470593157`*^9, 
   3.7217512017813153`*^9}, {3.7217516846753154`*^9, 
   3.7217517326203156`*^9}, {3.7217518395003157`*^9, 
   3.7217520469583154`*^9}, {3.7217520836303153`*^9, 
   3.7217524493163157`*^9}, {3.7217532048353157`*^9, 
   3.7217532481103153`*^9}, {3.7217533110523157`*^9, 
   3.7217533717013154`*^9}, {3.7217534101613154`*^9, 3.721753474711315*^9}, {
   3.7217535086323156`*^9, 3.7217535123373156`*^9}, {3.721754226907749*^9, 
   3.721754231331727*^9}, {3.7217881683170023`*^9, 3.721788201450002*^9}, {
   3.721788343412002*^9, 3.7217884070600023`*^9}, {3.721788446364002*^9, 
   3.721788447030002*^9}, {3.721794612569729*^9, 3.7217946336238337`*^9}, {
   3.7217946670891805`*^9, 3.721794757405211*^9}, {3.7217953914089837`*^9, 
   3.7217954177999835`*^9}, {3.721795469499984*^9, 3.7217956551479836`*^9}, {
   3.721795910558984*^9, 3.7217959250979834`*^9}, {3.721796062379984*^9, 
   3.721796093348984*^9}, {3.7217961347709837`*^9, 3.721796152716984*^9}}],

Cell[BoxData["\<\"\\\\frac{8 l_y l_z (l_z (2 g m \\\\sin \
^2(\\\\frac{\\\\theta _x}{2}) \\\\sec ^2(\\\\theta _x) \\\\sin ^2(\\\\theta \
_y)-g m \\\\cos (\\\\theta _x) \\\\cos ^2(\\\\theta _y))+m l_z^2 \\\\omega _y \
\\\\cos (\\\\theta _y) (\\\\omega _y \\\\cos ^2(\\\\frac{\\\\theta _x}{2}) \
((10 \\\\cos (\\\\theta _x)-5 \\\\cos (2 \\\\theta _x)-7) \\\\cos \
^2(\\\\theta _y)+2 (2 \\\\sec (\\\\theta _x)-3) \\\\sin ^2(\\\\theta \
_y))-\\\\omega _x \\\\tan (\\\\theta _x) \\\\sin (2 \\\\theta _y))-2 \\\\tau \
_x \\\\sin (\\\\theta _x) \\\\cos (\\\\theta _y)+\\\\tau _y \\\\sec \
^2(\\\\theta _x) (-\\\\sin (\\\\theta _y)))+l_y^2 (8 g m l_z \\\\sin (2 \
\\\\theta _x) \\\\cos (\\\\theta _y)+m l_z^2 \\\\omega _y (\\\\omega _y ((16 \
\\\\sin (\\\\theta _x)-6 \\\\sin (2 \\\\theta _x)+9 \\\\sin (4 \\\\theta _x)) \
\\\\cos ^2(\\\\theta _y)+8 \\\\sin ^2(\\\\theta _y) (\\\\sin (\\\\theta \
_x)+\\\\cos (2 \\\\theta _x) \\\\tan (\\\\theta _x)))-4 \\\\omega _x (3 \
\\\\cos (2 \\\\theta _x)-1) \\\\sec (\\\\theta _x) \\\\sin (2 \\\\theta \
_y))+8 \\\\tau _x \\\\sin ^2(\\\\theta _x))-2 m l_y^3 (4 g \\\\sin \
^2(\\\\theta _x) \\\\cos (\\\\theta _x)+l_z \\\\omega _y (\\\\omega _y \
\\\\sin ^2(\\\\theta _x) (5 \\\\cos (\\\\theta _x)+7 \\\\cos (3 \\\\theta \
_x)+4) \\\\cos (\\\\theta _y)-8 \\\\omega _x \\\\cos (2 \\\\theta _x) \\\\tan \
(\\\\theta _x) \\\\sin (\\\\theta _y)))+2 m l_y^4 \\\\omega _y^2 \\\\sin \
^2(\\\\theta _x) \\\\sin (4 \\\\theta _x)-4 l_z^2 (m l_z^2 \\\\omega _y^2 \
\\\\cos ^2(\\\\theta _y) (2 \\\\tan (\\\\theta _x) \\\\sin ^2(\\\\theta \
_y)+\\\\sin (2 \\\\theta _x) \\\\cos ^2(\\\\theta _y))-2 \\\\tau _x (\\\\sec \
^2(\\\\theta _x) \\\\sin ^2(\\\\theta _y)+\\\\cos ^2(\\\\theta _y)))}{8 m \
l_y^2 (l_y \\\\sin (\\\\theta _x)-l_z \\\\cos (\\\\theta _y)){}^2}\"\>"], \
"Output",
 CellChangeTimes->{{3.7217947485093217`*^9, 3.721794757638234*^9}, 
   3.7217952468819838`*^9, {3.7217953999589834`*^9, 3.721795420570984*^9}, {
   3.721795483275984*^9, 3.7217955218629837`*^9}, {3.721795563247984*^9, 
   3.7217956561719837`*^9}, 3.7217959255739837`*^9, 3.7217960837939835`*^9, 
   3.7217961202979836`*^9, 3.721796153773984*^9, 3.7218611845710526`*^9}],

Cell[BoxData["\<\"\\\\frac{m (l_z (\\\\omega _y^2 (l_y l_z \\\\cos \
^2(\\\\frac{\\\\theta _x}{2}) \\\\sin (2 \\\\theta _y)+l_z^2 \\\\tan \
(\\\\theta _x) \\\\sin (\\\\theta _y) \\\\cos ^2(\\\\theta _y)+l_y \\\\sin \
(\\\\theta _x) (l_z \\\\tan (\\\\theta _x) (-\\\\sin (2 \\\\theta _y))-l_y \\\
\\sin (\\\\theta _y) (\\\\cos (\\\\theta _x)-\\\\sin (\\\\theta _x) \\\\tan (\
\\\\theta _x)+1)))-g l_y (\\\\sec (\\\\theta _x)-1) \\\\sec (\\\\theta _x) \\\
\\sin (\\\\theta _y))+l_y \\\\omega _x \\\\omega _y (l_y^2 (-\\\\sin (2 \
\\\\theta _x))+2 l_y l_z \\\\cos (\\\\theta _x) \\\\cos (\\\\theta _y)+2 \
\\\\tan (\\\\theta _x) (l_y \\\\sin (\\\\theta _x)-l_z \\\\cos (\\\\theta \
_y)){}^2))+l_y \\\\tau _y \\\\sec ^2(\\\\theta _x)+l_z \\\\tau _x \\\\sec ^2(\
\\\\theta _x) (-\\\\sin (\\\\theta _y))}{m l_y (l_y \\\\sin (\\\\theta \
_x)-l_z \\\\cos (\\\\theta _y)){}^2}\"\>"], "Output",
 CellChangeTimes->{{3.7217947485093217`*^9, 3.721794757638234*^9}, 
   3.7217952468819838`*^9, {3.7217953999589834`*^9, 3.721795420570984*^9}, {
   3.721795483275984*^9, 3.7217955218629837`*^9}, {3.721795563247984*^9, 
   3.7217956561719837`*^9}, 3.7217959255739837`*^9, 3.7217960837939835`*^9, 
   3.7217961202979836`*^9, 3.721796153773984*^9, 3.7218612009691315`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TraditionalForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"\[Delta]x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", "pretty"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7217962403809834`*^9, 3.7217962498909836`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", "m", " ", 
     SubsuperscriptBox["l", "y", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["l", "y"], " ", 
         RowBox[{"sin", "(", 
          SubscriptBox["\[Theta]", "x"], ")"}]}], "-", 
        RowBox[{
         SubscriptBox["l", "z"], " ", 
         RowBox[{"cos", "(", 
          SubscriptBox["\[Theta]", "y"], ")"}]}]}], ")"}], "2"]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"8", " ", 
      SubscriptBox["l", "y"], " ", 
      SubscriptBox["l", "z"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["l", "z"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "g", " ", "m", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", 
             FractionBox[
              SubscriptBox["\[Theta]", "x"], "2"], ")"}], " ", 
            RowBox[{
             SuperscriptBox["sec", "2"], "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", 
             SubscriptBox["\[Theta]", "y"], ")"}]}], "-", 
           RowBox[{"g", " ", "m", " ", 
            RowBox[{"cos", "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", 
             SubscriptBox["\[Theta]", "y"], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"m", " ", 
         SubsuperscriptBox["l", "z", "2"], " ", 
         SubscriptBox["\[Omega]", "y"], " ", 
         RowBox[{"cos", "(", 
          SubscriptBox["\[Theta]", "y"], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "y"], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", 
             FractionBox[
              SubscriptBox["\[Theta]", "x"], "2"], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"10", " ", 
                  RowBox[{"cos", "(", 
                   SubscriptBox["\[Theta]", "x"], ")"}]}], "-", 
                 RowBox[{"5", " ", 
                  RowBox[{"cos", "(", 
                   RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "x"]}], ")"}]}], "-", "7"}], 
                ")"}], " ", 
               RowBox[{
                SuperscriptBox["cos", "2"], "(", 
                SubscriptBox["\[Theta]", "y"], ")"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"sec", "(", 
                   SubscriptBox["\[Theta]", "x"], ")"}]}], "-", "3"}], ")"}], 
               " ", 
               RowBox[{
                SuperscriptBox["sin", "2"], "(", 
                SubscriptBox["\[Theta]", "y"], ")"}]}]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["\[Omega]", "x"], " ", 
            RowBox[{"tan", "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "y"]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Tau]", "x"], " ", 
         RowBox[{"sin", "(", 
          SubscriptBox["\[Theta]", "x"], ")"}], " ", 
         RowBox[{"cos", "(", 
          SubscriptBox["\[Theta]", "y"], ")"}]}], "+", 
        RowBox[{
         SubscriptBox["\[Tau]", "y"], " ", 
         RowBox[{
          SuperscriptBox["sec", "2"], "(", 
          SubscriptBox["\[Theta]", "x"], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"sin", "(", 
            SubscriptBox["\[Theta]", "y"], ")"}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubsuperscriptBox["l", "y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", "g", " ", "m", " ", 
         SubscriptBox["l", "z"], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Theta]", "x"]}], ")"}], " ", 
         RowBox[{"cos", "(", 
          SubscriptBox["\[Theta]", "y"], ")"}]}], "+", 
        RowBox[{"m", " ", 
         SubsuperscriptBox["l", "z", "2"], " ", 
         SubscriptBox["\[Omega]", "y"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "y"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"16", " ", 
                  RowBox[{"sin", "(", 
                   SubscriptBox["\[Theta]", "x"], ")"}]}], "-", 
                 RowBox[{"6", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "x"]}], ")"}]}], "+", 
                 RowBox[{"9", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{"4", " ", 
                    SubscriptBox["\[Theta]", "x"]}], ")"}]}]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["cos", "2"], "(", 
                SubscriptBox["\[Theta]", "y"], ")"}]}], "+", 
              RowBox[{"8", " ", 
               RowBox[{
                SuperscriptBox["sin", "2"], "(", 
                SubscriptBox["\[Theta]", "y"], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"sin", "(", 
                  SubscriptBox["\[Theta]", "x"], ")"}], "+", 
                 RowBox[{
                  RowBox[{"cos", "(", 
                   RowBox[{"2", " ", 
                    SubscriptBox["\[Theta]", "x"]}], ")"}], " ", 
                  RowBox[{"tan", "(", 
                   SubscriptBox["\[Theta]", "x"], ")"}]}]}], ")"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"4", " ", 
            SubscriptBox["\[Omega]", "x"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", 
               RowBox[{"cos", "(", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Theta]", "x"]}], ")"}]}], "-", "1"}], ")"}], 
            " ", 
            RowBox[{"sec", "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "y"]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         SubscriptBox["\[Tau]", "x"], " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", 
          SubscriptBox["\[Theta]", "x"], ")"}]}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "m", " ", 
      SubsuperscriptBox["l", "y", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "g", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", 
          SubscriptBox["\[Theta]", "x"], ")"}], " ", 
         RowBox[{"cos", "(", 
          SubscriptBox["\[Theta]", "x"], ")"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "z"], " ", 
         SubscriptBox["\[Omega]", "y"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "y"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"5", " ", 
               RowBox[{"cos", "(", 
                SubscriptBox["\[Theta]", "x"], ")"}]}], "+", 
              RowBox[{"7", " ", 
               RowBox[{"cos", "(", 
                RowBox[{"3", " ", 
                 SubscriptBox["\[Theta]", "x"]}], ")"}]}], "+", "4"}], ")"}], 
            " ", 
            RowBox[{"cos", "(", 
             SubscriptBox["\[Theta]", "y"], ")"}]}], "-", 
           RowBox[{"8", " ", 
            SubscriptBox["\[Omega]", "x"], " ", 
            RowBox[{"cos", "(", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "x"]}], ")"}], " ", 
            RowBox[{"tan", "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{"sin", "(", 
             SubscriptBox["\[Theta]", "y"], ")"}]}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{"2", " ", "m", " ", 
      SubsuperscriptBox["l", "y", "4"], " ", 
      SubsuperscriptBox["\[Omega]", "y", "2"], " ", 
      RowBox[{
       SuperscriptBox["sin", "2"], "(", 
       SubscriptBox["\[Theta]", "x"], ")"}], " ", 
      RowBox[{"sin", "(", 
       RowBox[{"4", " ", 
        SubscriptBox["\[Theta]", "x"]}], ")"}]}], "-", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["l", "z", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m", " ", 
         SubsuperscriptBox["l", "z", "2"], " ", 
         SubsuperscriptBox["\[Omega]", "y", "2"], " ", 
         RowBox[{
          SuperscriptBox["cos", "2"], "(", 
          SubscriptBox["\[Theta]", "y"], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"tan", "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", 
             SubscriptBox["\[Theta]", "y"], ")"}]}], "+", 
           RowBox[{
            RowBox[{"sin", "(", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Theta]", "x"]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", 
             SubscriptBox["\[Theta]", "y"], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Tau]", "x"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["sec", "2"], "(", 
             SubscriptBox["\[Theta]", "x"], ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", 
             SubscriptBox["\[Theta]", "y"], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", 
            SubscriptBox["\[Theta]", "y"], ")"}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.7217962769589834`*^9, 3.721861214383106*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "ToMatlab`"}]], "Input",
 CellChangeTimes->{{3.721861234314125*^9, 3.721861243236448*^9}, {
  3.7218612915309553`*^9, 3.7218613280548296`*^9}, {3.721861370359599*^9, 
  3.721861387071927*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mpretty", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lx", "\[Rule]", " ", "lx"}], ",", " ", 
     RowBox[{"ly", "\[Rule]", " ", "ly"}], ",", " ", 
     RowBox[{"lz", "\[Rule]", " ", "lz"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]x", "[", "t", "]"}], " ", "\[Rule]", " ", "tx"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Theta]x", "[", "t", "]"}], ",", "t"}], "]"}], " ", 
      "\[Rule]", " ", "wx"}], ",", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]x", "[", "t", "]"}], ",", "t"}], "]"}], ",", "t"}],
        "]"}], " ", "\[Rule]", " ", "ax"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]y", "[", "t", "]"}], " ", "\[Rule]", " ", "ty"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Theta]y", "[", "t", "]"}], ",", "t"}], "]"}], " ", 
      "\[Rule]", " ", "wy"}], ",", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Theta]y", "[", "t", "]"}], ",", "t"}], "]"}], ",", "t"}],
        "]"}], " ", "\[Rule]", " ", "ay"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Tau]x", "[", "t", "]"}], "\[Rule]", " ", "ux"}], " ", ",", 
     RowBox[{
      RowBox[{"\[Tau]y", "[", "t", "]"}], " ", "\[Rule]", " ", "uy"}]}], " ", 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ToMatlab", "[", 
  RowBox[{"\[Delta]x", "/.", "mpretty"}], "]"}]}], "Input",
 CellChangeTimes->{{3.721861404204214*^9, 3.7218614639762363`*^9}}],

Cell[BoxData["\<\"[(1/8).*ly.^(-2).*m.^(-1).*cos(tx).^2.*(lz.*cos(ty)+(-1).*\
ly.*sin( ...\\n  \
tx)).^(-2).*((-8).*ly.*lz.*uy.*sec(tx).^4.*sin(ty)+ux.*sec(tx).*( ...\\n  \
8.*lz.^2.*cos(ty).^2.*sec(tx)+(ly.^2+4.*lz.^2+(-1).*ly.^2.*cos(4.* ...\\n  \
tx)+(-4).*lz.^2.*cos(2.*ty)).*sec(tx).^3+(-16).*ly.*lz.*cos(ty).* ...\\n  \
tan(tx))+(-1).*m.*(4.*ly.*lz.*wx.*wy.*sec(tx).^3.*sin(ty).*(3.* ...\\n  \
ly.*lz.*cos(2.*tx+(-1).*ty)+(-2).*ly.*lz.*cos(ty)+3.*ly.*lz.*cos( ...\\n  \
2.*tx+ty)+2.*ly.^2.*sin(tx)+2.*lz.^2.*sin(tx)+(-2).*ly.^2.*sin(3.* ...\\n  \
tx)+lz.^2.*sin(tx+(-2).*ty)+lz.^2.*sin(tx+2.*ty))+2.*g.*ly.*(4.* ...\\n  \
lz.^2.*cos(ty).^2.*sec(tx)+(3.*ly.^2+(-4).*lz.^2+6.*ly.^2.*cos(tx) ...\\n  \
+4.*ly.^2.*cos(2.*tx)+2.*ly.^2.*cos(3.*tx)+ly.^2.*cos(4.*tx)+4.* ...\\n  \
lz.^2.*cos(2.*ty)).*sec(tx).^4.*sin((1/2).*tx).^2+(-8).*ly.*lz.* ...\\n  \
cos(ty).*tan(tx))+(-1).*wy.^2.*sec(tx).*((-8).*lz.^4.*cos(ty).^4.* ...\\n  \
sin(tx)+(-8).*ly.*lz.^3.*cos((1/2).*tx).^2.*cos(ty).*sec(tx).*((7+ ...\\n  \
(-10).*cos(tx)+5.*cos(2.*tx)).*cos(ty).^2+2.*(3+(-2).*sec(tx)).* ...\\n  \
sin(ty).^2)+lz.^2.*cos(ty).^2.*(3.*ly.^2+(-4).*lz.^2+16.*ly.^2.* ...\\n  \
cos(tx)+12.*ly.^2.*cos(2.*tx)+9.*ly.^2.*cos(4.*tx)+4.*lz.^2.*cos( ...\\n  \
2.*ty)).*sec(tx).*tan(tx)+(-2).*ly.^3.*lz.*(4+5.*cos(tx)+7.*cos( ...\\n  \
3.*tx)).*cos(ty).*sin(tx).*tan(tx)+8.*ly.^2.*(ly.^2.*cos(2.*tx).* ...\\n  \
sin(tx).^3+lz.^2.*(1+cos(2.*tx).*sec(tx)).*sin(ty).^2.*tan(tx))))) ...\\n  \
,ly.^(-1).*m.^(-1).*(lz.*cos(ty)+(-1).*ly.*sin(tx)).^(-2).*(ly.* ...\\n  \
uy.*sec(tx).^2+(-1).*lz.*ux.*sec(tx).^2.*sin(ty)+m.*(ly.*wx.*wy.*( ...\\n  \
2.*ly.*lz.*cos(tx).*cos(ty)+(-1).*ly.^2.*sin(2.*tx)+2.*(lz.*cos( ...\\n  \
ty)+(-1).*ly.*sin(tx)).^2.*tan(tx))+lz.*((-1).*g.*ly.*((-1)+sec( ...\\n  \
tx)).*sec(tx).*sin(ty)+wy.^2.*(ly.*lz.*cos((1/2).*tx).^2.*sin(2.* ...\\n  \
ty)+lz.^2.*cos(ty).^2.*sin(ty).*tan(tx)+ly.*sin(tx).*((-1).*lz.* ...\\n  \
sin(2.*ty).*tan(tx)+(-1).*ly.*sin(ty).*(1+cos(tx)+(-1).*sin(tx).* ...\\n  \
tan(tx)))))))];\\n\"\>"], "Output",
 CellChangeTimes->{3.721861389104724*^9, 3.7218614644711866`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["p"], "Input",
 CellChangeTimes->{3.721862795177249*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"lx", "+", 
    RowBox[{"lz", " ", 
     RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "lz"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], "+", 
    RowBox[{"ly", " ", 
     RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7218627953642488`*^9}]
}, Open  ]]
},
WindowSize->{944, 982},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 10502, 248, 1212, "Input"],
Cell[11085, 272, 395, 9, 31, "Output"],
Cell[11483, 283, 1327, 37, 46, "Output"],
Cell[12813, 322, 460, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13310, 338, 5161, 123, 232, "Input"],
Cell[18474, 463, 1955, 51, 69, "Output"],
Cell[20432, 516, 3943, 101, 126, "Output"],
Cell[24378, 619, 9249, 241, 229, "Output"],
Cell[33630, 862, 19420, 456, 666, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53087, 1323, 6688, 144, 272, "Input"],
Cell[59778, 1469, 19880, 470, 680, "Output"],
Cell[79661, 1941, 714, 13, 31, "Output"],
Cell[80378, 1956, 18494, 397, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98909, 2358, 2326, 63, 152, "Input"],
Cell[101238, 2423, 810, 14, 21, "Message"],
Cell[102051, 2439, 134451, 2255, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236539, 4699, 3681, 92, 292, "Input"],
Cell[240223, 4793, 2913, 43, 31, "Output"],
Cell[243139, 4838, 3130, 51, 60, "Output"],
Cell[246272, 4891, 3212, 55, 150, "Output"],
Cell[249487, 4948, 2982, 49, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252506, 5002, 5702, 131, 412, "Input"],
Cell[258211, 5135, 2168, 30, 31, "Output"],
Cell[260382, 5167, 20365, 379, 264, "Output"],
Cell[280750, 5548, 913, 16, 21, "Message"],
Cell[281666, 5566, 908, 16, 21, "Message"],
Cell[282577, 5584, 909, 16, 21, "Message"],
Cell[283489, 5602, 907, 17, 21, "Message"],
Cell[284399, 5621, 13315, 259, 244, "Output"]
}, Open  ]],
Cell[297729, 5883, 92, 1, 31, "Input"],
Cell[297824, 5886, 4828, 104, 212, "Input"],
Cell[CellGroupData[{
Cell[302677, 5994, 7607, 171, 692, "Input"],
Cell[310287, 6167, 2170, 29, 312, "Output"],
Cell[312460, 6198, 1254, 16, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313751, 6219, 267, 6, 31, "Input"],
Cell[314021, 6227, 10114, 268, 281, "Output"]
}, Open  ]],
Cell[324150, 6498, 221, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[324396, 6506, 1746, 45, 152, "Input"],
Cell[326145, 6553, 2093, 28, 572, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328275, 6586, 69, 1, 31, "Input"],
Cell[328347, 6589, 398, 12, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
